{"version":3,"sources":["helpers/fetchApi.helper.js","hooks/useSearchProduct.hook.js","apps/containers/SearchProduct/style.jsx","apps/containers/SearchProduct/SearchProduct.container.jsx","apps/components/core/index.js","apps/layouts/ShopProduct.layout.jsx","views/shop/SearchProduct.view.jsx"],"names":["isMethodGET","method","fetchApiClient","url","data","fetch","format","qs","stringify","bindUrlWithParam","process","body","undefined","JSON","then","response","json","respData","code","message","error","Error","useSearchProductHook","useState","keyword","setKeyword","useQuery","name","enabled","goodList","isLoading","styles","theme","root","color","whiteColor","wrapperHeader","padding","backgroundColor","primaryColor","marginTop","marginBottom","border","fontSize","search","width","borderRadius","listProduct","minHeight","withStyles","props","classes","t","className","Container","TextField","onChange","event","target","value","size","variant","placeholder","InputProps","startAdornment","InputAdornment","position","Search","Grid","container","spacing","item","xs","label","justifyContent","map","image","title","price","currency","category","masterGoodsId","Footer","lazy","useStyles","makeStyles","ShopProductLayout","children","withTranslation","history","location","Helmet","content"],"mappings":"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","file":"static/js/5.1c54ea51.chunk.js","sourcesContent":["import format from \"string-template\";\nimport qs from \"qs\";\n\nconst API_URL =\n  process.env.NODE_ENV === \"development\" ? \"\" : process.env.REACT_APP_API;\n\nconst isMethodGET = (method) => method === \"GET\";\n\nconst bindUrlWithParam = (url, method, data) =>\n  format(url, data) + (isMethodGET(method) ? `?${qs.stringify(data)}` : \"\");\n\nexport const fetchApiClient = (url, method, data) =>\n  fetch(bindUrlWithParam(API_URL + url, method, data), {\n    method,\n    body: !isMethodGET(method) ? JSON.stringify(data) : undefined,\n  })\n    .then((response) => response.json())\n    .then((respData) => {\n      if (respData?.code !== 200) {\n        const { code, message, data } = respData;\n        const error = new Error(message);\n        error.code = code;\n        error.message = message;\n        error.data = data;\n        throw error;\n      }\n      return respData;\n    });\n","import { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { fetchApiClient } from \"helpers/fetchApi.helper\";\n\nconst useSearchProductHook = () => {\n  const [keyword, setKeyword] = useState(\"\");\n  const { data: goodList, isLoading } = useQuery(\n    [\"listProduct\", keyword],\n    () =>\n      fetchApiClient(`/mastergood/search`, \"GET\", {\n        name: keyword,\n      }),\n    {\n      enabled: !!keyword,\n    }\n  );\n  return { goodList, isLoading, setKeyword };\n};\n\nexport default useSearchProductHook;\n","const styles = (theme) => ({\n  root: {\n    color: theme.whiteColor,\n  },\n  wrapperHeader: {\n    padding: \"16px 0\",\n    color: theme.whiteColor,\n    backgroundColor: theme.primaryColor,\n    \"& h4\": {\n      marginTop: 4,\n      marginBottom: 32,\n    },\n    \"& h2\": {\n      marginTop: 0,\n      marginBottom: 4,\n    },\n    \"& .MuiInputBase-root\": {\n      color: \"inherit\",\n    },\n    \"& .MuiFormLabel-root\": {\n      color: \"inherit\",\n    },\n    \"& .MuiOutlinedInput-notchedOutline\": {\n      border: \"none\",\n    },\n    \"& .MuiOutlinedInput-input\": {\n      padding: 12,\n      fontSize: 22,\n    },\n  },\n  search: {\n    width: \"100%\",\n    backgroundColor: \"#2196f3\",\n    borderRadius: 10,\n  },\n  listProduct: {\n    marginTop: 32,\n    minHeight: 300,\n  },\n});\n\nexport default styles;\n","import { object, func } from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { TextField, InputAdornment, Container, Grid } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nimport { Card, Spinner } from \"apps/components/ui\";\nimport useSearchProductHook from \"hooks/useSearchProduct.hook\";\n\nimport styles from \"./style\";\n\nconst SearchProductContainer = (props) => {\n  const { classes, t } = props;\n  const { goodList, isLoading, setKeyword } = useSearchProductHook();\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapperHeader}>\n        <Container>\n          <h2>{t(\"greeting\")}</h2>\n          <h4>{t(\"subGreeting\")}</h4>\n          <TextField\n            onChange={(event) => setKeyword(event.target.value)}\n            size=\"medium\"\n            variant=\"outlined\"\n            className={classes.search}\n            placeholder={t(\"searchPlaceholder\")}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <Search color=\"white\" />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Container>\n      </div>\n      <Container className={classes.listProduct}>\n        <Grid container className={classes.root} spacing={2}>\n          <Grid item xs={12}>\n            {isLoading ? (\n              <Spinner label={t(\"common:loading\")} />\n            ) : (\n              <Grid container justifyContent=\"center\" spacing={2}>\n                {goodList?.data?.map((item) => (\n                  <Grid key={item.masterGoodsId} item>\n                    <Card\n                      t={t}\n                      image={item.image}\n                      title={item.name}\n                      price={item.price}\n                      currency={item.currency}\n                      category={item.category}\n                    />\n                  </Grid>\n                ))}\n              </Grid>\n            )}\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nSearchProductContainer.propTypes = {\n  t: func.isRequired,\n  history: object.isRequired,\n  location: object.isRequired,\n  classes: object.isRequired,\n};\n\nexport default withStyles(styles)(SearchProductContainer);\n","import { lazy } from \"react\";\n\nconst Footer = lazy(() => import(\"./Footer/Footer.component\"));\n\nexport { Footer };\n","import { element, func } from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Footer } from \"apps/components/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\nconst ShopProductLayout = ({ children, t }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      {children}\n      <Footer t={t} />\n    </div>\n  );\n};\n\nShopProductLayout.propTypes = {\n  children: element.isRequired,\n  t: func.isRequired,\n};\n\nexport default ShopProductLayout;\n","import { Helmet } from \"react-helmet\";\nimport { withTranslation } from \"react-i18next\";\nimport { func, object } from \"prop-types\";\nimport SearchProductContainer from \"apps/containers/SearchProduct/SearchProduct.container\";\nimport ShopProductLayout from \"apps/layouts/ShopProduct.layout\";\n\nconst SearchProductView = (props) => {\n  const { t, history, location } = props;\n  return (\n    <>\n      <Helmet>\n        <title>{t(\"metaTitle\")}</title>\n        <meta name=\"description\" content={t(\"metaTitle\")} />\n      </Helmet>\n      <ShopProductLayout t={t}>\n        <SearchProductContainer t={t} history={history} location={location} />\n      </ShopProductLayout>\n    </>\n  );\n};\n\nSearchProductView.propTypes = {\n  t: func.isRequired,\n  history: object.isRequired,\n  location: object.isRequired,\n};\n\nexport default withTranslation([\"search_product\", \"glossary\"])(\n  SearchProductView\n);\n"],"sourceRoot":""}