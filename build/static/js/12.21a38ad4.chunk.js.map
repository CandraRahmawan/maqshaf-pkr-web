{"version":3,"sources":["helpers/fetchApi.helper.js","apps/components/core/SearchProduct/index.js","apps/components/core/index.js","hooks/useSearchProduct.hook.js","apps/containers/SearchProduct/style.jsx","apps/containers/SearchProduct/SearchProduct.container.jsx","apps/layouts/ShopProduct.layout.jsx","views/shop/SearchProduct.view.jsx"],"names":["isMethodGET","method","fetchApiClient","url","data","fetch","format","qs","stringify","bindUrlWithParam","process","headers","body","undefined","JSON","then","response","json","respData","code","message","error","Error","SummaryDialog","lazy","IdentityDataDialog","ConfirmationPinDialog","Footer","useSearchProductHook","useState","keyword","setKeyword","useQuery","name","goodList","isLoading","styles","theme","root","color","whiteColor","fab","position","bottom","spacing","right","backgroundColor","orangeColor","badge","zIndex","closeButton","top","palette","grey","wrapperHeader","padding","primaryColor","marginTop","marginBottom","border","fontSize","search","width","borderRadius","listProduct","minHeight","withStyles","props","classes","t","history","dispatch","useDispatch","open","setOpen","useSelector","state","cartSelected","items","total","qty","action","useParams","isIdentityAction","isEnterPinAction","handleOpenModal","handleCloseModal","replace","addCartAction","selectCart","className","Container","TextField","onChange","event","target","value","size","variant","placeholder","InputProps","startAdornment","InputAdornment","Search","Grid","container","item","xs","label","justifyContent","map","image","title","price","currency","category","openModal","selectedItems","masterGoodsId","Badge","badgeContent","length","anchorOrigin","vertical","horizontal","Fab","aria-label","onClick","ShoppingCart","Dialog","fullScreen","aria-labelledby","onClose","DialogTitle","disableTypography","Typography","IconButton","Close","SearchProduct","useStyles","makeStyles","ShopProductLayout","children","withTranslation","location","Helmet","content"],"mappings":"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","file":"static/js/12.21a38ad4.chunk.js","sourcesContent":["import format from \"string-template\";\nimport qs from \"qs\";\n\nconst API_URL =\n  process.env.NODE_ENV === \"development\" ? \"\" : process.env.REACT_APP_API;\n\nconst isMethodGET = (method) => method === \"GET\";\n\nconst bindUrlWithParam = (url, method, data) =>\n  format(url, data) + (isMethodGET(method) ? `?${qs.stringify(data)}` : \"\");\n\nexport const fetchApiClient = (url, method, data) =>\n  fetch(bindUrlWithParam(API_URL + url, method, data), {\n    method,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: !isMethodGET(method) ? JSON.stringify(data) : undefined,\n  })\n    .then((response) => response.json())\n    .then((respData) => {\n      if (respData?.code !== 200) {\n        const { code, message, data } = respData;\n        const error = new Error(message);\n        error.code = code;\n        error.message = message;\n        error.data = data;\n        throw error;\n      }\n      return respData;\n    });\n","import { lazy } from \"react\";\n\nconst SummaryDialog = lazy(() => import(\"./SummaryDialog.component\"));\nconst IdentityDataDialog = lazy(() => import(\"./IdentityDataDialog.component\"));\nconst ConfirmationPinDialog = lazy(() =>\n  import(\"./ConfirmationPinDialog.component\")\n);\n\nexport default { SummaryDialog, IdentityDataDialog, ConfirmationPinDialog };\n","import { lazy } from \"react\";\nimport SearchProduct from \"./SearchProduct\";\n\nconst Footer = lazy(() => import(\"./Footer/Footer.component\"));\n\nexport { Footer, SearchProduct };\n","import { useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { fetchApiClient } from \"helpers/fetchApi.helper\";\n\nconst useSearchProductHook = () => {\n  const [keyword, setKeyword] = useState(\"\");\n  const { data: goodList, isLoading } = useQuery([\"listProduct\", keyword], () =>\n    fetchApiClient(`/mastergood/search`, \"GET\", {\n      name: keyword,\n    })\n  );\n  return { goodList, isLoading, setKeyword };\n};\n\nexport default useSearchProductHook;\n","const styles = (theme) => ({\n  root: {\n    color: theme.whiteColor,\n  },\n  fab: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    backgroundColor: theme.orangeColor,\n    color: theme.whiteColor,\n  },\n  badge: {\n    position: \"fixed\",\n    bottom: theme.spacing(8),\n    right: theme.spacing(3),\n    zIndex: 1,\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  wrapperHeader: {\n    padding: \"16px 0\",\n    color: theme.whiteColor,\n    backgroundColor: theme.primaryColor,\n    \"& h4\": {\n      marginTop: 4,\n      marginBottom: 32,\n    },\n    \"& h2\": {\n      marginTop: 0,\n      marginBottom: 4,\n    },\n    \"& .MuiInputBase-root\": {\n      color: \"inherit\",\n    },\n    \"& .MuiFormLabel-root\": {\n      color: \"inherit\",\n    },\n    \"& .MuiOutlinedInput-notchedOutline\": {\n      border: \"none\",\n    },\n    \"& .MuiOutlinedInput-input\": {\n      padding: 12,\n      fontSize: 22,\n    },\n  },\n  search: {\n    width: \"100%\",\n    backgroundColor: \"#2196f3\",\n    borderRadius: 10,\n  },\n  listProduct: {\n    marginTop: 32,\n    minHeight: 300,\n  },\n});\n\nexport default styles;\n","import { useState } from \"react\";\nimport { object, func } from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  TextField,\n  InputAdornment,\n  Container,\n  Grid,\n  Dialog,\n  DialogTitle,\n  Fab,\n  Badge,\n  IconButton,\n  Typography,\n} from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { Search, ShoppingCart, Close } from \"@material-ui/icons\";\nimport { useDispatch } from \"react-redux\";\nimport { Card, Spinner } from \"apps/components/ui\";\nimport { SearchProduct } from \"apps/components/core\";\nimport useSearchProductHook from \"hooks/useSearchProduct.hook\";\nimport { selectCart } from \"redux/reducers/cartSelected.reducer\";\n\nimport styles from \"./style\";\n\nconst SearchProductContainer = (props) => {\n  const { classes, t, history } = props;\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const { goodList, isLoading, setKeyword } = useSearchProductHook();\n  const { items, total, qty } = useSelector((state) => state.cartSelected);\n  const { action } = useParams();\n  const isIdentityAction = action === \"identitas\";\n  const isEnterPinAction = action === \"pin\";\n\n  const handleOpenModal = () => {\n    setOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    history.replace(\"/\");\n    setOpen(false);\n  };\n\n  const addCartAction = (items) => {\n    dispatch(selectCart({ items }));\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapperHeader}>\n        <Container>\n          <h2>{t(\"greeting\")}</h2>\n          <h4>{t(\"subGreeting\")}</h4>\n          <TextField\n            onChange={(event) => setKeyword(event.target.value)}\n            size=\"medium\"\n            variant=\"outlined\"\n            className={classes.search}\n            placeholder={t(\"searchPlaceholder\")}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <Search color=\"white\" />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Container>\n      </div>\n      <Container className={classes.listProduct}>\n        <Grid container className={classes.root} spacing={2}>\n          <Grid item xs={12}>\n            {isLoading ? (\n              <Spinner label={t(\"common:loading\")} />\n            ) : (\n              <Grid container justifyContent=\"center\" spacing={2}>\n                {goodList?.data?.map((item) => (\n                  <Grid key={item.masterGoodsId} item>\n                    <Card\n                      t={t}\n                      image={item.image}\n                      title={item.name}\n                      price={item.price}\n                      currency={item.currency}\n                      category={item.category}\n                      openModal={handleOpenModal}\n                      addCartAction={addCartAction}\n                      selectedItems={items}\n                    />\n                  </Grid>\n                ))}\n              </Grid>\n            )}\n          </Grid>\n        </Grid>\n      </Container>\n      <Badge\n        className={classes.badge}\n        badgeContent={items.length > 0 ? items.length : null}\n        color=\"secondary\"\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n      >\n        <Fab\n          aria-label=\"test\"\n          onClick={() => items.length > 0 && handleOpenModal()}\n          className={classes.fab}\n        >\n          <ShoppingCart />\n        </Fab>\n      </Badge>\n      <Dialog\n        fullScreen\n        open={open}\n        aria-labelledby=\"form-dialog-title\"\n        onClose={handleCloseModal}\n      >\n        <DialogTitle disableTypography>\n          <Typography variant=\"h6\">\n            {isIdentityAction\n              ? t(\"search_product:dialogIdentityDataTitle\")\n              : isEnterPinAction\n              ? t(\"search_product:dialogConfirmationPin\")\n              : t(\"search_product:dialogTotalSummaryTitle\")}\n          </Typography>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={handleCloseModal}\n          >\n            <Close />\n          </IconButton>\n        </DialogTitle>\n        {isIdentityAction ? (\n          <SearchProduct.IdentityDataDialog\n            t={t}\n            handleCloseModal={handleCloseModal}\n            history={history}\n            items={items}\n            total={total}\n            qty={qty}\n          />\n        ) : isEnterPinAction ? (\n          <SearchProduct.ConfirmationPinDialog\n            t={t}\n            handleCloseModal={handleCloseModal}\n            items={items}\n            history={history}\n            total={total}\n          />\n        ) : (\n          <SearchProduct.SummaryDialog\n            t={t}\n            handleCloseModal={handleCloseModal}\n            items={items}\n            history={history}\n            total={total}\n          />\n        )}\n      </Dialog>\n    </div>\n  );\n};\n\nSearchProductContainer.propTypes = {\n  t: func.isRequired,\n  history: object.isRequired,\n  location: object.isRequired,\n  classes: object.isRequired,\n};\n\nexport default withStyles(styles)(SearchProductContainer);\n","import { element, func } from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Footer } from \"apps/components/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\nconst ShopProductLayout = ({ children, t }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      {children}\n      <Footer t={t} />\n    </div>\n  );\n};\n\nShopProductLayout.propTypes = {\n  children: element.isRequired,\n  t: func.isRequired,\n};\n\nexport default ShopProductLayout;\n","import { Helmet } from \"react-helmet\";\nimport { withTranslation } from \"react-i18next\";\nimport { func, object } from \"prop-types\";\nimport SearchProductContainer from \"apps/containers/SearchProduct/SearchProduct.container\";\nimport ShopProductLayout from \"apps/layouts/ShopProduct.layout\";\n\nconst SearchProductView = (props) => {\n  const { t, history, location } = props;\n  return (\n    <>\n      <Helmet>\n        <title>{t(\"metaTitle\")}</title>\n        <meta name=\"description\" content={t(\"metaTitle\")} />\n      </Helmet>\n      <ShopProductLayout t={t}>\n        <SearchProductContainer t={t} history={history} location={location} />\n      </ShopProductLayout>\n    </>\n  );\n};\n\nSearchProductView.propTypes = {\n  t: func.isRequired,\n  history: object.isRequired,\n  location: object.isRequired,\n};\n\nexport default withTranslation([\"search_product\", \"glossary\"])(\n  SearchProductView\n);\n"],"sourceRoot":""}