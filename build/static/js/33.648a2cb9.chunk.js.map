{"version":3,"sources":["helpers/formattor.helper.js","apps/components/core/SearchProduct/useStyle.js","apps/components/core/SearchProduct/SummaryDialog.component.jsx"],"names":["rupiahFormat","value","currency","reverse","toString","split","join","reverseMatch","match","defaultFormatDate","date","dayjs","format","useStyle","makeStyles","theme","list_modal_image","marginRight","width","height","list_modal_text","color","black","button_progress","position","top","left","marginTop","marginLeft","input_pin","SummaryDialogComponent","props","classes","useStyles","dispatch","useDispatch","t","handleCloseModal","items","history","total","addToCart","item","type","tempSelected","map","obj","idx","findIndex","masterGoodsId","selected","qty","tempSelectedFiltered","filter","isEmpty","clearCart","selectCart","index","className","src","image","alt","name","primary","secondary","price","display","justifyContent","alignItems","onClick","aria-label","component","length","variant","disabled","push"],"mappings":"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","file":"static/js/33.648a2cb9.chunk.js","sourcesContent":["import dayjs from 'dayjs';\n\nexport const rupiahFormat = (value, currency = 'Rp') => {\n  if (value) {\n    const reverse = value.toString().split('').reverse().join('');\n    const reverseMatch = reverse.match(/\\d{1,3}/g);\n    return `${currency}. ${reverseMatch.join('.').split('').reverse().join('')}`;\n  }\n  return value\n};\n\nexport const defaultFormatDate = (date) => {\n  return dayjs(date).format('DD MMM YYYY, HH:mm');\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyle = makeStyles((theme) => ({\n  list_modal_image: {\n    marginRight: 12,\n\n    \"& img\": {\n      width: 50,\n      height: 50,\n    },\n  },\n\n  list_modal_text: {\n    color: theme.color.black,\n  },\n\n  button_progress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n\n  input_pin: {\n    width: \"100%\",\n  },\n}));\n\nexport default useStyle;\n","import {\n  Box,\n  IconButton,\n  Button,\n  DialogContent,\n  DialogActions,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n} from '@material-ui/core';\nimport { Remove, Add } from '@material-ui/icons';\nimport { useDispatch } from 'react-redux';\nimport { func, array, object, number } from 'prop-types';\nimport { rupiahFormat } from 'helpers/formattor.helper';\nimport { clearCart, selectCart } from 'redux/reducers/cartSelected.reducer';\n\nimport useStyles from './useStyle';\nimport { isEmpty } from 'lodash';\n\nconst SummaryDialogComponent = (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { t, handleCloseModal, items, history, total } = props;\n\n  const addToCart = (item, type) => {\n    let tempSelected = items.map((obj) => obj)\n    const idx = tempSelected.findIndex((obj) => obj.masterGoodsId === item.masterGoodsId)\n    if (type === 'ADD') {\n      const selected = { ...tempSelected[idx], qty: tempSelected[idx].qty + 1 }\n      tempSelected[idx] = selected\n    } else {\n      if (tempSelected[idx].qty > 1) {\n        const selected = { ...tempSelected[idx], qty: tempSelected[idx].qty - 1 }\n        tempSelected[idx] = selected\n      } else {\n        const tempSelectedFiltered = tempSelected.filter((obj) => obj.masterGoodsId !== item.masterGoodsId)\n        tempSelected = tempSelectedFiltered\n      }\n    }\n\n    if (isEmpty(tempSelected)) {\n      dispatch(clearCart())\n    } else {\n      dispatch(selectCart({ items: tempSelected }))\n    }\n  }\n\n  return (\n    <>\n      <DialogContent>\n        <p>{t('search_product:dialogTotalSummaryInfo')}</p>\n        <List>\n          {items.map((item, index) => (\n            <>\n              <ListItem key={index}>\n                <ListItemAvatar className={classes.list_modal_image}>\n                  <img src={item.image} alt={item.name} />\n                </ListItemAvatar>\n                <ListItemText\n                  className={classes.list_modal_text}\n                  primary={item.name}\n                  secondary={\n                    <Box>\n                      {rupiahFormat(item.price, item.currency)}\n                      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n                        Qty:\n                        <Box>\n                          <IconButton onClick={() => addToCart(item, 'REMOVE')} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                            <Remove />\n                          </IconButton>\n                          {item.qty}\n                          <IconButton onClick={() => addToCart(item, 'ADD')} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                            <Add />\n                          </IconButton>\n                        </Box>\n                      </Box>\n                    </Box>\n                  }\n                />\n              </ListItem>\n              <Divider />\n            </>\n          ))}\n        </List>\n        {\n          items.length === 0 ? (\n            <Box display=\"flex\">\n              <div>\n                <Typography variant=\"subtitle1\" color=\"disabled\">\n                  {t('search_product:dialogEmptyBuy')}\n                </Typography>\n              </div>\n            </Box>\n          ) : (\n            <Box display=\"flex\" justifyContent=\"space-between\">\n              <div>\n                <Typography variant=\"subtitle1\" color=\"disabled\">\n                  {t('search_product:dialogTotalBuy')}\n                </Typography>\n              </div>\n              <div>\n                <Typography variant=\"subtitle1\">{rupiahFormat(total)}</Typography>\n              </div>\n            </Box>\n          )\n        }\n\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            dispatch(clearCart());\n            handleCloseModal();\n          }}\n          color=\"primary\"\n        >\n          {t('common:cancel')}\n        </Button>\n        <Button disabled={items.length === 0} onClick={() => history.push('/identitas')} color=\"primary\">\n          {t('common:next')}\n        </Button>\n      </DialogActions>\n    </>\n  );\n};\n\nSummaryDialogComponent.propTypes = {\n  t: func.isRequired,\n  handleCloseModal: func.isRequired,\n  items: array.isRequired,\n  history: object.isRequired,\n  total: number.isRequired,\n};\n\nexport default SummaryDialogComponent;\n"],"sourceRoot":""}