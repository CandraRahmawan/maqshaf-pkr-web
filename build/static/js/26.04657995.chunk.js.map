{"version":3,"sources":["helpers/auth.helper.js","apps/components/core/SearchProduct/index.js","apps/components/core/Header/index.js","apps/components/core/index.js","apps/layouts/Dashboard.layout.jsx","apps/containers/Dashboard/style.jsx","apps/containers/Dashboard/CheckBalanced.container.jsx","views/dashboard/CheckBalanced.view.jsx"],"names":["setAuth","data","localStorage","setItem","JSON","stringify","getUser","parse","getItem","err","console","error","logout","clear","window","location","replace","SummaryDialog","lazy","IdentityDataDialog","ConfirmationPinDialog","Dashboard","Login","Footer","SidebarMenuLeft","useStyles","makeStyles","theme","drawer_header","display","alignItems","padding","spacing","mixins","toolbar","justifyContent","main_wrapper","flexGrow","content","transition","transitions","create","easing","sharp","duration","leavingscreen","content_shift","easeout","enteringscreen","marginLeft","DashboardLayout","children","t","history","classes","useState","open","setOpen","useEffect","handleDrawerOpen","handleDrawerClose","className","clsx","styles","button_login","marginTop","login_box","login_root","margin","form","width","logo_login_wrapper","paddingBottom","textAlign","withStyles","Grid","withTranslation","props","Helmet","name"],"mappings":"2HAAA,sGAAO,IAAMA,EAAU,SAACC,GACtBC,aAAaC,QAAQ,eAAgBC,KAAKC,UAAL,OAAeJ,QAAf,IAAeA,OAAf,EAAeA,EAAMA,QAG/CK,EAAU,WACrB,IACE,OAAOF,KAAKG,MAAML,aAAaM,QAAQ,iBACvC,MAAOC,GAEP,OADAC,QAAQC,MAAMF,GACP,OAIEG,EAAS,WACpBV,aAAaW,QACbC,OAAOC,SAASC,QAAQ,sB,oLCPX,GAAEC,cANKC,gBAAK,kBAAM,+DAMDC,mBALLD,gBAAK,kBAAM,8EAKcE,sBAJtBF,gBAAK,kBACjC,8ECAa,GAAEG,UAHCH,gBAAK,kBAAM,gEAGDI,MAFdJ,gBAAK,kBAAM,mCCCnBK,EAASL,gBAAK,kBAAM,kCACpBM,EAAkBN,gBAAK,kBAAM,wE,+GCE7BO,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,cAAc,yBACZC,QAAS,OACTC,WAAY,SACZC,QAASJ,EAAMK,QAAQ,EAAG,IACvBL,EAAMM,OAAOC,SAJL,IAMXC,eAAgB,aAGlBC,aAAc,CACZC,SAAU,EACVN,QAASJ,EAAMK,QAAQ,IAGzBM,QAAS,CACPD,SAAU,EACVN,QAASJ,EAAMK,QAAQ,GACvBO,WACEZ,EAAMa,YAAYC,OAChB,SACA,CACEC,OAAQf,EAAMa,YAAYE,OAAOC,MACjCC,SAAUjB,EAAMa,YAAYI,SAASC,iBAK7CC,cAAe,CACbP,WACEZ,EAAMa,YAAYC,OAChB,SACA,CACEC,OAAQf,EAAMa,YAAYE,OAAOK,QACjCH,SAAUjB,EAAMa,YAAYI,SAASI,iBAG3CC,WAAY,OAuCDC,IAnCS,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,EAAGC,EAAc,EAAdA,QAChCC,EAAU7B,IADoC,EAE5B8B,oBAAS,GAFmB,mBAE7CC,EAF6C,KAEvCC,EAFuC,KAYpD,OANAC,qBAAU,WACHpD,eACH+C,EAAQrC,QAAQ,sBAEjB,IAGD,qCACE,cAAC,IAAOK,UAAR,CAAkB+B,EAAGA,EAAGI,KAAMA,EAAMG,iBAVf,kBAAMF,GAAQ,MAWnC,cAAC,IAAD,CAAiBL,EAAGA,EAAGI,KAAMA,EAAMI,kBAZb,kBAAMH,GAAQ,MAapC,uBACEI,UAAWC,YAAKR,EAAQhB,QAAT,eACZgB,EAAQR,cAAgBU,IAF7B,UAKE,qBAAKK,UAAWP,EAAQ1B,gBACvBuB,KAEH,cAAC,IAAD,CAAQC,EAAGA,S,iCC/CFW,IAzBA,SAACpC,GAAD,MAAY,CACzBqC,aAAc,CACZC,UAAW,IAEbC,UAAW,CACTnC,QAAS,IAEXoC,WAAY,CACVC,OAAQ,SACRH,UAAW,OAEbI,KAAM,CACJC,MAAO,OACPL,UAAW,IAEbG,OAAQ,CACNA,OAAQzC,EAAMK,QAAQ,IAExBuC,mBAAoB,CAClBC,cAAe,GACfJ,OAAQ,SACRK,UAAW,a,+FCJAC,cAAWX,IAAXW,EAXgB,WAC7B,OAAO,cAACC,EAAA,EAAD,gC,SCoBMC,sBAAgB,CAAC,2BAA4B,YAA7CA,EArBS,SAACC,GAAW,IAC1BzB,EAAyByB,EAAzBzB,EAAGC,EAAsBwB,EAAtBxB,QAAStC,EAAa8D,EAAb9D,SACpB,OACE,qCACE,eAAC+D,EAAA,EAAD,WACE,gCAAQ1B,EAAE,wCACV,sBAAM2B,KAAK,cAAczC,QAASc,EAAE,iDAEtC,cAAC,IAAD,CAAiBA,EAAGA,EAAGC,QAASA,EAAhC,SACE,cAAC,EAAD,CAAwBD,EAAGA,EAAGC,QAASA,EAAStC,SAAUA","file":"static/js/26.04657995.chunk.js","sourcesContent":["export const setAuth = (data) => {\n  localStorage.setItem('maqshaf-user', JSON.stringify(data?.data));\n};\n\nexport const getUser = () => {\n  try {\n    return JSON.parse(localStorage.getItem('maqshaf-user'));\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n};\n\nexport const logout = () => {\n  localStorage.clear();\n  window.location.replace('/dashboard/login');\n};\n","import { lazy } from \"react\";\n\nconst SummaryDialog = lazy(() => import(\"./SummaryDialog.component\"));\nconst IdentityDataDialog = lazy(() => import(\"./IdentityDataDialog.component\"));\nconst ConfirmationPinDialog = lazy(() =>\n  import(\"./ConfirmationPinDialog.component\")\n);\n\nexport default { SummaryDialog, IdentityDataDialog, ConfirmationPinDialog };\n","import { lazy } from 'react';\n\nconst Dashboard = lazy(() => import('./Dashboard.component'));\nconst Login = lazy(() => import('./Login.component'));\n\nexport default { Dashboard, Login };\n","import { lazy } from 'react';\nimport SearchProduct from './SearchProduct';\nimport Header from './Header';\n\nconst Footer = lazy(() => import('./Footer/Footer.component'));\nconst SidebarMenuLeft = lazy(() => import('./SidebarLeftMenu/SidebarMenuLeft.component'));\n\nexport { Footer, SearchProduct, Header, SidebarMenuLeft };\n","import { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { element, func, object } from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Footer, Header, SidebarMenuLeft } from 'apps/components/core';\nimport { getUser } from 'helpers/auth.helper';\n\nconst useStyles = makeStyles((theme) => ({\n  drawer_header: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n\n    justifyContent: 'flex-end',\n  },\n\n  main_wrapper: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition:\n      theme.transitions.create(\n        'margin',\n        {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingscreen,\n        }\n      ),\n  },\n\n  content_shift: {\n    transition:\n      theme.transitions.create(\n        'margin',\n        {\n          easing: theme.transitions.easing.easeout,\n          duration: theme.transitions.duration.enteringscreen,\n        }\n      ),\n    marginLeft: 0,\n  },\n}));\n\nconst DashboardLayout = ({ children, t, history }) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const handleDrawerClose = () => setOpen(false);\n  const handleDrawerOpen = () => setOpen(true);\n\n  useEffect(() => {\n    if (!getUser()) {\n      history.replace('/dashboard/login');\n    }\n  }, []);\n\n  return (\n    <>\n      <Header.Dashboard t={t} open={open} handleDrawerOpen={handleDrawerOpen} />\n      <SidebarMenuLeft t={t} open={open} handleDrawerClose={handleDrawerClose} />\n      <main\n        className={clsx(classes.content, {\n          [classes.content_shift]: open,\n        })}\n      >\n        <div className={classes.drawer_header} />\n        {children}\n      </main>\n      <Footer t={t} />\n    </>\n  );\n};\n\nDashboardLayout.propTypes = {\n  history: object.isRequired,\n  children: element.isRequired,\n  t: func.isRequired,\n};\n\nexport default DashboardLayout;\n","const styles = (theme) => ({\n  button_login: {\n    marginTop: 16,\n  },\n  login_box: {\n    padding: 16,\n  },\n  login_root: {\n    margin: '0 auto',\n    marginTop: '10%',\n  },\n  form: {\n    width: '100%',\n    marginTop: 24,\n  },\n  margin: {\n    margin: theme.spacing(2),\n  },\n  logo_login_wrapper: {\n    paddingBottom: 16,\n    margin: '0 auto',\n    textAlign: 'center',\n  },\n});\n\nexport default styles;\n","import { func, object } from 'prop-types';\nimport { Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport styles from './style';\n\nconst CheckBalancedContainer = () => {\n  return <Grid>Check Balanced</Grid>;\n};\n\nCheckBalancedContainer.propTypes = {\n  t: func.isRequired,\n  classes: object.isRequired,\n  history: object.isRequired,\n  location: object.isRequired,\n};\n\nexport default withStyles(styles)(CheckBalancedContainer);\n","import { Helmet } from 'react-helmet';\nimport { withTranslation } from 'react-i18next';\nimport { func, object } from 'prop-types';\nimport CheckBalancedContainer from 'apps/containers/Dashboard/CheckBalanced.container';\nimport DashboardLayout from 'apps/layouts/Dashboard.layout';\n\nconst ProductListView = (props) => {\n  const { t, history, location } = props;\n  return (\n    <>\n      <Helmet>\n        <title>{t('dashboard_check_balanced:metaTitle')}</title>\n        <meta name=\"description\" content={t('dashboard_check_balanced:metaDescription')} />\n      </Helmet>\n      <DashboardLayout t={t} history={history}>\n        <CheckBalancedContainer t={t} history={history} location={location} />\n      </DashboardLayout>\n    </>\n  );\n};\n\nProductListView.propTypes = {\n  t: func.isRequired,\n  history: object.isRequired,\n  location: object.isRequired,\n};\n\nexport default withTranslation(['dashboard_check_balanced', 'glossary'])(ProductListView);\n"],"sourceRoot":""}