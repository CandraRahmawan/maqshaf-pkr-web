{"version":3,"sources":["../node_modules/@material-ui/core/esm/utils/ownerDocument.js","../node_modules/@material-ui/core/esm/SvgIcon/SvgIcon.js","../node_modules/@material-ui/core/esm/utils/createSvgIcon.js","../node_modules/@material-ui/core/esm/utils/createChainedFunction.js","../node_modules/@material-ui/core/esm/IconButton/IconButton.js","apps/components/ui/Alerts/Floating.component.jsx"],"names":["ownerDocument","node","document","SvgIcon","React","props","ref","children","classes","className","_props$color","color","_props$component","component","Component","_props$fontSize","fontSize","htmlColor","titleAccess","_props$viewBox","viewBox","other","_objectWithoutProperties","_extends","clsx","root","concat","capitalize","focusable","undefined","role","muiName","withStyles","theme","userSelect","width","height","display","fill","flexShrink","typography","pxToRem","transition","transitions","create","duration","shorter","colorPrimary","palette","primary","main","colorSecondary","secondary","colorAction","action","active","colorError","error","colorDisabled","disabled","fontSizeInherit","fontSizeSmall","fontSizeLarge","name","createSvgIcon","path","displayName","createElement","memo","forwardRef","createChainedFunction","_len","arguments","length","funcs","Array","_key","reduce","acc","func","_len2","args","_key2","apply","this","IconButton","_props$edge","edge","_props$disabled","_props$disableFocusRi","disableFocusRipple","_props$size","size","ButtonBase","edgeStart","edgeEnd","centerRipple","focusRipple","label","textAlign","flex","padding","borderRadius","overflow","shortest","backgroundColor","alpha","hoverOpacity","marginLeft","marginRight","colorInherit","sizeSmall","alignItems","justifyContent","FloatingComponent","showAlert","setShowAlert","text","severity","open","autoHideDuration","onClose","variant","defaultProps"],"mappings":"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","file":"static/js/28.08bfe11a.chunk.js","sourcesContent":["export default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      userSelect: 'none',\n      width: '1em',\n      height: '1em',\n      display: 'inline-block',\n      fill: 'currentColor',\n      flexShrink: 0,\n      fontSize: theme.typography.pxToRem(24),\n      transition: theme.transitions.create('fill', {\n        duration: theme.transitions.duration.shorter\n      })\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"action\"`. */\n    colorAction: {\n      color: theme.palette.action.active\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `color=\"disabled\"`. */\n    colorDisabled: {\n      color: theme.palette.action.disabled\n    },\n\n    /* Styles applied to the root element if `fontSize=\"inherit\"`. */\n    fontSizeInherit: {\n      fontSize: 'inherit'\n    },\n\n    /* Styles applied to the root element if `fontSize=\"small\"`. */\n    fontSizeSmall: {\n      fontSize: theme.typography.pxToRem(20)\n    },\n\n    /* Styles applied to the root element if `fontSize=\"large\"`. */\n    fontSizeLarge: {\n      fontSize: theme.typography.pxToRem(35)\n    }\n  };\n};\nvar SvgIcon = /*#__PURE__*/React.forwardRef(function SvgIcon(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'inherit' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'svg' : _props$component,\n      _props$fontSize = props.fontSize,\n      fontSize = _props$fontSize === void 0 ? 'medium' : _props$fontSize,\n      htmlColor = props.htmlColor,\n      titleAccess = props.titleAccess,\n      _props$viewBox = props.viewBox,\n      viewBox = _props$viewBox === void 0 ? '0 0 24 24' : _props$viewBox,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"titleAccess\", \"viewBox\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], fontSize !== 'default' && fontSize !== 'medium' && classes[\"fontSize\".concat(capitalize(fontSize))]),\n    focusable: \"false\",\n    viewBox: viewBox,\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? undefined : true,\n    role: titleAccess ? 'img' : undefined,\n    ref: ref\n  }, other), children, titleAccess ? /*#__PURE__*/React.createElement(\"title\", null, titleAccess) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * Node passed into the SVG element.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The color of the component. It supports those theme colors that make sense for this component.\r\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\r\n   */\n  color: PropTypes.oneOf(['action', 'disabled', 'error', 'inherit', 'primary', 'secondary']),\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\r\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\r\n   */\n  fontSize: chainPropTypes(PropTypes.oneOf(['default', 'inherit', 'large', 'medium', 'small']), function (props) {\n    var fontSize = props.fontSize;\n\n    if (fontSize === 'default') {\n      throw new Error('Material-UI: `fontSize=\"default\"` is deprecated. Use `fontSize=\"medium\"` instead.');\n    }\n\n    return null;\n  }),\n\n  /**\r\n   * Applies a color attribute to the SVG element.\r\n   */\n  htmlColor: PropTypes.string,\n\n  /**\r\n   * The shape-rendering attribute. The behavior of the different options is described on the\r\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\r\n   * If you are having issues with blurry icons you should investigate this property.\r\n   */\n  shapeRendering: PropTypes.string,\n\n  /**\r\n   * Provides a human-readable title for the element that contains it.\r\n   * https://www.w3.org/TR/SVG-access/#Equivalent\r\n   */\n  titleAccess: PropTypes.string,\n\n  /**\r\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\r\n   * For example, if the SVG element is 500 (width) by 200 (height),\r\n   * and you pass viewBox=\"0 0 50 20\",\r\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\r\n   * to bottom right (50,20) and each unit will be worth 10px.\r\n   */\n  viewBox: PropTypes.string\n} : void 0;\nSvgIcon.muiName = 'SvgIcon';\nexport default withStyles(styles, {\n  name: 'MuiSvgIcon'\n})(SvgIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '../SvgIcon';\n/**\r\n * Private module reserved for @material-ui/x packages.\r\n */\n\nexport default function createSvgIcon(path, displayName) {\n  var Component = function Component(props, ref) {\n    return /*#__PURE__*/React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Need to set `displayName` on the inner component for React.memo.\n    // React prior to 16.14 ignores `displayName` on the wrapper.\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Component));\n}","/**\r\n * Safe chained function\r\n *\r\n * Will only create a new function if needed,\r\n * otherwise will pass back existing functions or null.\r\n *\r\n * @param {function} functions to chain\r\n * @returns {function|null}\r\n */\nexport default function createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.reduce(function (acc, func) {\n    if (func == null) {\n      return acc;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof func !== 'function') {\n        console.error('Material-UI: Invalid Argument Type, must only provide functions, undefined, or null.');\n      }\n    }\n\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      acc.apply(this, args);\n      func.apply(this, args);\n    };\n  }, function () {});\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      textAlign: 'center',\n      flex: '0 0 auto',\n      fontSize: theme.typography.pxToRem(24),\n      padding: 12,\n      borderRadius: '50%',\n      overflow: 'visible',\n      // Explicitly set the default value to solve a bug on IE 11.\n      color: theme.palette.action.active,\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: 'transparent',\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -12,\n      '$sizeSmall&': {\n        marginLeft: -3\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -12,\n      '$sizeSmall&': {\n        marginRight: -3\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: 3,\n      fontSize: theme.typography.pxToRem(18)\n    },\n\n    /* Styles applied to the children container element. */\n    label: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    }\n  };\n};\n/**\r\n * Refer to the [Icons](/components/icons/) section of the documentation\r\n * regarding the available icon options.\r\n */\n\nvar IconButton = /*#__PURE__*/React.forwardRef(function IconButton(props, ref) {\n  var _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"edge\", \"children\", \"classes\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], disabled && classes.disabled, size === \"small\" && classes[\"size\".concat(capitalize(size))], {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge]),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes = {\n  /**\r\n   * The icon element.\r\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var found = React.Children.toArray(props.children).some(function (child) {\n      return /*#__PURE__*/React.isValidElement(child) && child.props.onClick;\n    });\n\n    if (found) {\n      return new Error(['Material-UI: You are providing an onClick event listener ' + 'to a child of a button element.', 'Firefox will never trigger the event.', 'You should move the onClick listener to the parent button element.', 'https://github.com/mui-org/material-ui/issues/13957'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The color of the component. It supports those theme colors that make sense for this component.\r\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\r\n   * If `true`, the button will be disabled.\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * If `true`, the  keyboard focus ripple will be disabled.\r\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\r\n   * If `true`, the ripple effect will be disabled.\r\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\r\n   * If given, uses a negative margin to counteract the padding on one\r\n   * side (this is often helpful for aligning the left or right\r\n   * side of the icon with content above or below, without ruining the border\r\n   * size and shape).\r\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\r\n   * The size of the button.\r\n   * `small` is equivalent to the dense button styling.\r\n   */\n  size: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiIconButton'\n})(IconButton);","import Alert from '@material-ui/lab/Alert';\nimport { Snackbar } from '@material-ui/core';\nimport { bool, func } from 'prop-types';\n\nconst FloatingComponent = (props) => {\n  const { showAlert, setShowAlert, text, severity } = props;\n  return (\n    <Snackbar open={showAlert} autoHideDuration={2000} onClose={() => setShowAlert(false)}>\n      <Alert severity={severity} variant=\"filled\">\n        {text}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nFloatingComponent.defaultProps = {\n  severity: 'success',\n};\n\nFloatingComponent.propTypes = {\n  setShowAlert: func.isRequired,\n  showAlert: bool.isRequired,\n};\n\nexport default FloatingComponent;\n"],"sourceRoot":""}