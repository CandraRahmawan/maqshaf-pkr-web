{"version":3,"sources":["helpers/formattor.helper.js","apps/components/core/SearchProduct/useStyle.js","apps/components/core/SearchProduct/SummaryDialog.component.js"],"names":["rupiahFormat","value","currency","reverse","toString","split","join","reverseMatch","match","useStyle","makeStyles","theme","listmodalimage","marginRight","width","height","listmodaltext","color","blackcolor","SummaryDialogComponent","props","classes","useStyles","dispatch","useDispatch","t","handleCloseModal","items","history","total","map","item","index","className","listModalImage","src","image","alt","name","listModalText","primary","secondary","price","display","justifyContent","variant","onClick","clearCart","push"],"mappings":"0HAAA,kCAAO,IAAMA,EAAe,SAACC,GAA4B,IAArBC,EAAoB,uDAAT,KACvCC,EAAUF,EAAMG,WAAWC,MAAM,IAAIF,UAAUG,KAAK,IACpDC,EAAeJ,EAAQK,MAAM,YACnC,MAAM,GAAN,OAAUN,EAAV,aAAuBK,EAAaD,KAAK,KAAKD,MAAM,IAAIF,UAAUG,KAAK,O,iCCHzE,aAEMG,EAAWC,aAAW,SAACC,GAAD,MAAY,CACtCC,eAAgB,CACdC,YAAa,GAEb,QAAS,CACPC,MAAO,GACPC,OAAQ,KAIZC,cAAe,CACbC,MAAON,EAAMO,gBAIFT,O,iCCjBf,8IAiFeU,UA9DgB,SAACC,GAC9B,IAAMC,EAAUC,cACVC,EAAWC,cACTC,EAA+CL,EAA/CK,EAAGC,EAA4CN,EAA5CM,iBAAkBC,EAA0BP,EAA1BO,MAAOC,EAAmBR,EAAnBQ,QAASC,EAAUT,EAAVS,MAC7C,OACE,qCACE,eAAC,IAAD,WACE,4BAAIJ,EAAE,2CACN,cAAC,IAAD,UACGE,EAAMG,KAAI,SAACC,EAAMC,GAAP,OACT,qCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAgBC,UAAWZ,EAAQa,eAAnC,SACE,qBAAKC,IAAKJ,EAAKK,MAAOC,IAAKN,EAAKO,SAElC,cAAC,IAAD,CACEL,UAAWZ,EAAQkB,cACnBC,QAAST,EAAKO,KACdG,UAAWzC,YAAa+B,EAAKW,MAAOX,EAAK7B,cAP9B8B,GAUf,cAAC,IAAD,YAIN,eAAC,IAAD,CAAKW,QAAQ,OAAOC,eAAe,gBAAnC,UACE,8BACE,cAAC,IAAD,CAAYC,QAAQ,YAAY5B,MAAM,WAAtC,SACGQ,EAAE,qCAGP,8BACE,cAAC,IAAD,CAAYoB,QAAQ,YAApB,SAAiC7C,YAAa6B,aAIpD,eAAC,IAAD,WACE,cAAC,IAAD,CACEiB,QAAS,WACPvB,EAASwB,eACTrB,KAEFT,MAAM,UALR,SAOGQ,EAAE,mBAEL,cAAC,IAAD,CAAQqB,QAAS,kBAAMlB,EAAQoB,KAAK,eAAe/B,MAAM,UAAzD,SACGQ,EAAE","file":"static/js/8.5dcb7049.chunk.js","sourcesContent":["export const rupiahFormat = (value, currency = \"Rp\") => {\n  const reverse = value.toString().split(\"\").reverse().join(\"\");\n  const reverseMatch = reverse.match(/\\d{1,3}/g);\n  return `${currency}. ${reverseMatch.join(\".\").split(\"\").reverse().join(\"\")}`;\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyle = makeStyles((theme) => ({\n  listmodalimage: {\n    marginRight: 12,\n\n    \"& img\": {\n      width: 50,\n      height: 50,\n    },\n  },\n\n  listmodaltext: {\n    color: theme.blackcolor,\n  },\n}));\n\nexport default useStyle;\n","import {\n  Box,\n  Button,\n  DialogContent,\n  DialogActions,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { func, array, object, number } from \"prop-types\";\nimport { rupiahFormat } from \"helpers/formattor.helper\";\nimport { clearCart } from \"redux/reducers/cartSelected.reducer\";\n\nimport useStyles from \"./useStyle\";\n\nconst SummaryDialogComponent = (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { t, handleCloseModal, items, history, total } = props;\n  return (\n    <>\n      <DialogContent>\n        <p>{t(\"search_product:dialogTotalSummaryInfo\")}</p>\n        <List>\n          {items.map((item, index) => (\n            <>\n              <ListItem key={index}>\n                <ListItemAvatar className={classes.listModalImage}>\n                  <img src={item.image} alt={item.name} />\n                </ListItemAvatar>\n                <ListItemText\n                  className={classes.listModalText}\n                  primary={item.name}\n                  secondary={rupiahFormat(item.price, item.currency)}\n                />\n              </ListItem>\n              <Divider />\n            </>\n          ))}\n        </List>\n        <Box display=\"flex\" justifyContent=\"space-between\">\n          <div>\n            <Typography variant=\"subtitle1\" color=\"disabled\">\n              {t(\"search_product:dialogTotalBuy\")}\n            </Typography>\n          </div>\n          <div>\n            <Typography variant=\"subtitle1\">{rupiahFormat(total)}</Typography>\n          </div>\n        </Box>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            dispatch(clearCart());\n            handleCloseModal();\n          }}\n          color=\"primary\"\n        >\n          {t(\"common:cancel\")}\n        </Button>\n        <Button onClick={() => history.push(\"/identitas\")} color=\"primary\">\n          {t(\"common:pay\")}\n        </Button>\n      </DialogActions>\n    </>\n  );\n};\n\nSummaryDialogComponent.propTypes = {\n  t: func.isRequired,\n  handleCloseModal: func.isRequired,\n  items: array.isRequired,\n  history: object.isRequired,\n  total: number.isRequired,\n};\n\nexport default SummaryDialogComponent;\n"],"sourceRoot":""}