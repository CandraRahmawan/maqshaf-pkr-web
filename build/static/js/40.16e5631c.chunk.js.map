{"version":3,"sources":["apps/components/core/SidebarLeftMenu/style.jsx","apps/components/core/SidebarLeftMenu/SidebarMenuLeft.component.jsx"],"names":["useStyles","makeStyles","theme","drawer","width","flexShrink","color","black","textDecoration","drawer_paper","drawer_header","display","alignItems","padding","spacing","mixins","toolbar","justifyContent","menu_title_wrapper","marginLeft","alignSelf","active","nested","paddingLeft","SidebarMenuLeftComponent","props","history","useHistory","classes","useTheme","open","handleDrawerClose","t","useState","openSubmenu","setOpenSubmenu","openDialog","setOpenDialog","getActiveClasses","url","location","pathname","startsWith","Drawer","className","variant","anchor","paper","src","height","Typography","IconButton","onClick","direction","ChevronLeft","ChevronRight","Divider","List","to","ListItem","button","ListItemIcon","Dashboard","ListItemText","primary","Storefront","People","SupervisedUserCircle","AccountBalanceWallet","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","component","disablePadding","clsx","CallReceived","CallMade","CreditCard","ExitToApp","handleOk","logout","handleClose","title","content"],"mappings":"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","file":"static/js/40.16e5631c.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: 240,\n    flexShrink: 0,\n\n    '& a': {\n      color: theme.color.black,\n      textDecoration: 'none',\n\n      '&:hover': {\n        textDecoration: 'none',\n      },\n    },\n  },\n\n  drawer_paper: {\n    width: 240,\n  },\n\n  drawer_header: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n\n    justifyContent: 'flex-end',\n  },\n\n  menu_title_wrapper: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n\n    '& h5': {\n      marginLeft: 12,\n      alignItems: 'center',\n      alignSelf: 'center',\n    },\n  },\n  active: {\n    color: '#1a237e',\n    // backgroundColor: 'silver'\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\nexport default useStyles;\n","import { useState } from 'react';\nimport {\n  Divider,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n  Collapse,\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\nimport {\n  ChevronLeft,\n  ChevronRight,\n  Dashboard,\n  Storefront,\n  People,\n  SupervisedUserCircle,\n  ExpandLess,\n  ExpandMore,\n  CallReceived,\n  CallMade,\n  AccountBalanceWallet,\n  CreditCard,\n  ExitToApp,\n} from '@material-ui/icons';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Dialog } from 'apps/components/ui';\nimport { logout } from 'helpers/auth.helper';\n\nimport useStyles from './style';\n\nconst SidebarMenuLeftComponent = (props) => {\n  const history = useHistory()\n  const classes = useStyles();\n  const theme = useTheme();\n  const { open, handleDrawerClose, t } = props;\n  const [openSubmenu, setOpenSubmenu] = useState(false);\n  const [openDialog, setOpenDialog] = useState(false);\n\n  const handleSubmenuClick = () => {\n    setOpenSubmenu(!openSubmenu);\n  };\n\n  const getActiveClasses = (url) => {\n    if (url !== '/dashboard') {\n      if(history.location.pathname.startsWith(url)) {\n        return classes.active\n      }\n    } else {\n      if (history.location.pathname === '/dashboard') {\n        return classes.active\n      }\n    }\n    \n    return ''\n  }\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"persistent\"\n      anchor=\"left\"\n      open={open}\n      classes={{\n        paper: classes.drawer_paper,\n      }}\n    >\n      <div className={classes.drawer_header}>\n        <div className={classes.menu_title_wrapper}>\n          <img src=\"/assets/logo192.png\" width={30} height={30} />\n          <Typography variant=\"h5\">{t('common:leftMenu.menu')}</Typography>\n        </div>\n        <IconButton onClick={handleDrawerClose}>\n          {theme.direction === 'ltr' ? <ChevronLeft /> : <ChevronRight />}\n        </IconButton>\n      </div>\n      <Divider />\n      <List>\n        <Link to=\"/dashboard\">\n          <ListItem button key=\"dashboard\"  className={getActiveClasses('/dashboard')}>\n            <ListItemIcon>\n              <Dashboard className={getActiveClasses('/dashboard')} />\n            </ListItemIcon>\n            <ListItemText primary={t('common:leftMenu.dashboard')} />\n          </ListItem>\n        </Link>\n        <Link to=\"/dashboard/produk\">\n          <ListItem button key=\"product\" className={getActiveClasses('/dashboard/produk')}>\n            <ListItemIcon>\n              <Storefront className={getActiveClasses('/dashboard/produk')} />\n            </ListItemIcon>\n            <ListItemText primary={t('common:leftMenu.product')} />\n          </ListItem>\n        </Link>\n        <Link to=\"/dashboard/santri\">\n          <ListItem button key=\"user\" className={getActiveClasses('/dashboard/santri')}>\n            <ListItemIcon>\n              <People className={getActiveClasses('/dashboard/santri')} />\n            </ListItemIcon>\n            <ListItemText primary={t('common:leftMenu.user')} />\n          </ListItem>\n        </Link>\n        <Link to=\"/dashboard/administrator\">\n          <ListItem button key=\"administrator\" className={getActiveClasses('/dashboard/administrator')}>\n            <ListItemIcon>\n              <SupervisedUserCircle className={getActiveClasses('/dashboard/administrator')} />\n            </ListItemIcon>\n            <ListItemText primary={t('common:leftMenu.admin')} />\n          </ListItem>\n        </Link>\n        <ListItem button key=\"transaction\" onClick={handleSubmenuClick}>\n          <ListItemIcon>\n            <AccountBalanceWallet />\n          </ListItemIcon>\n          <ListItemText primary={t('common:leftMenu.transaction')} />\n          {openSubmenu ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={openSubmenu} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            <Link to=\"/dashboard/transaksi/masuk\">\n              <ListItem button className={clsx(classes.nested, getActiveClasses('/dashboard/transaksi/masuk'))}>\n                <ListItemIcon>\n                  <CallReceived className={getActiveClasses('/dashboard/transaksi/masuk')} />\n                </ListItemIcon>\n                <ListItemText primary={t('common:leftMenu.in')} />\n              </ListItem>\n            </Link>\n            <Link to=\"/dashboard/transaksi/keluar\">\n              <ListItem button className={clsx(classes.nested, getActiveClasses('/dashboard/transaksi/keluar'))}>\n                <ListItemIcon>\n                  <CallMade className={getActiveClasses('/dashboard/transaksi/keluar')} />\n                </ListItemIcon>\n                <ListItemText primary={t('common:leftMenu.out')} />\n              </ListItem>\n            </Link>\n          </List>\n        </Collapse>\n        <Link to=\"/dashboard/cek-saldo\">\n          <ListItem button key=\"balanced\" className={getActiveClasses('/dashboard/cek-saldo')}>\n            <ListItemIcon>\n              <CreditCard  className={getActiveClasses('/dashboard/cek-saldo')}/>\n            </ListItemIcon>\n            <ListItemText primary={t('common:leftMenu.checkBalanced')} />\n          </ListItem>\n        </Link>\n        <div onClick={() => setOpenDialog(true)}>\n          <ListItem button key=\"logout\">\n            <ListItemIcon>\n              <ExitToApp />\n            </ListItemIcon>\n            <ListItemText primary={t('common:leftMenu.logout')} />\n          </ListItem>\n        </div>\n      </List>\n      <Dialog\n        t={t}\n        open={openDialog}\n        handleOk={logout}\n        handleClose={() => setOpenDialog(false)}\n        title={t('common:confirmation')}\n        content={t('dashboard:confirmationLogout')}\n      />\n    </Drawer>\n  );\n};\n\nexport default SidebarMenuLeftComponent;\n"],"sourceRoot":""}