{"version":3,"sources":["helpers/formattor.helper.js","apps/components/ui/Cards/style.js","apps/components/ui/Cards/Card.component.js"],"names":["rupiahFormat","value","currency","reverse","toString","split","join","reverseMatch","match","useStyles","makeStyles","theme","root","borderRadius","breakpoints","down","minWidth","paddingBottom","width","height","fontSize","fontWeight","media","backgroundSize","margin","content_background","backgroundColor","CardComponent","props","image","title","price","category","t","openModal","addCartAction","selectedItems","useState","showAlert","setShowAlert","classes","isXsDevice","useMediaQuery","handleShowAlert","Card","className","CardActionArea","onClick","qty","name","CardMedia","CardContent","Typography","color","variant","gutterBottom","CardActions","Button","size","Snackbar","open","autoHideDuration","onClose","Alert","severity"],"mappings":"2HAAA,kCAAO,IAAMA,EAAe,SAACC,GAA4B,IAArBC,EAAoB,uDAAT,KACvCC,EAAUF,EAAMG,WAAWC,MAAM,IAAIF,UAAUG,KAAK,IACpDC,EAAeJ,EAAQK,MAAM,YACnC,MAAM,GAAN,OAAUN,EAAV,aAAuBK,EAAaD,KAAK,KAAKD,MAAM,IAAIF,UAAUG,KAAK,O,oMCD5DG,EAAYC,aAAW,SAACC,GAAD,YAAY,CAC9CC,MAAI,GACFC,aAAc,IADZ,cAEDF,EAAMG,YAAYC,KAAK,MAAQ,CAC9BC,SAAU,MAHV,cAMF,yBANE,eAOCL,EAAMG,YAAYC,KAAK,MAAQ,CAC9BE,cAAe,KARjB,cAYF,sBAZE,aAaAC,MAAO,IACPC,OAAQ,GACRC,SAAU,IACTT,EAAMG,YAAYC,KAAK,MAAQ,CAC9BG,MAAO,OACPC,OAAQ,GACRC,SAAU,MAnBZ,cAuBF,sBAvBE,aAwBAC,WAAY,KACXV,EAAMG,YAAYC,KAAK,MAAQ,CAC9BK,SAAU,MA1BZ,cA8BF,0CA9BE,eA+BCT,EAAMG,YAAYC,KAAK,MAAQ,CAC9BK,SAAU,MAhCZ,cAoCF,WAAY,CACVF,MAAO,SArCP,GAyCJI,MAAO,CACLH,OAAQ,IACRI,eAAgB,UAChBC,OAAQ,IAGVC,mBAAoB,CAClBC,gBAAiB,e,cCkENC,UAlGO,SAACC,GAAW,IAE9BC,EASED,EATFC,MACAC,EAQEF,EARFE,MACAC,EAOEH,EAPFG,MACA7B,EAME0B,EANF1B,SACA8B,EAKEJ,EALFI,SACAC,EAIEL,EAJFK,EACAC,EAGEN,EAHFM,UACAC,EAEEP,EAFFO,cACAC,EACER,EADFQ,cAV6B,EAYGC,oBAAS,GAZZ,mBAYxBC,EAZwB,KAYbC,EAZa,KAazBC,EAAU/B,IACVgC,EAAaC,aAAc,SAAC/B,GAAD,OAAWA,EAAMG,YAAYC,KAAK,SAC7D4B,EAAkB,kBAAMJ,GAAa,IAC3C,OACE,eAACK,EAAA,EAAD,CAAMC,UAAWL,EAAQ5B,KAAzB,UACE,cAACkC,EAAA,EAAD,CACED,UAAWL,EAAQf,mBACnBsB,QAAS,WACPb,IACAC,EAAc,CACZ,CACEa,IAAK,EACLjB,QACA7B,WACA+C,KAAMnB,EACND,YAVR,SAeE,cAACqB,EAAA,EAAD,CAAWL,UAAWL,EAAQlB,MAAOO,MAAOA,EAAOC,MAAOA,MAE5D,eAACqB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,QAAQ,IAA1C,SACGtB,IAEH,cAACoB,EAAA,EAAD,CAAYG,cAAY,EAACD,QAAQ,KAAjC,SACGxB,IAEH,cAACsB,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,QAAQ,KAA1C,SACGtD,YAAa+B,EAAO7B,QAGzB,cAACsD,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLL,MAAM,UACNC,QAAQ,YACRP,QAAS,kBACPZ,EAAc,GAAD,mBACRC,GADQ,CAEX,CACEP,QACAmB,IAAK,EACL9C,WACA6B,QACAkB,KAAMnB,OAZd,SAiBGW,EACC,cAAC,IAAD,CAAqBM,QAASJ,IAE9B,uBAAMI,QAASJ,EAAf,UACGV,EAAE,4BADL,WAMN,cAAC0B,EAAA,EAAD,CACEC,KAAMtB,EACNuB,iBAAkB,IAClBC,QAAS,kBAAMvB,GAAa,IAH9B,SAKE,cAACwB,EAAA,EAAD,CAAOC,SAAS,UAAUV,QAAQ,SAAlC,SACGrB,EAAE,6CA9D2BH","file":"static/js/14.3306014c.chunk.js","sourcesContent":["export const rupiahFormat = (value, currency = \"Rp\") => {\n  const reverse = value.toString().split(\"\").reverse().join(\"\");\n  const reverseMatch = reverse.match(/\\d{1,3}/g);\n  return `${currency}. ${reverseMatch.join(\".\").split(\"\").reverse().join(\"\")}`;\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    borderRadius: 10,\n    [theme.breakpoints.down(\"xs\")]: {\n      minWidth: 150,\n    },\n\n    \"& .MuiCardContent-root\": {\n      [theme.breakpoints.down(\"xs\")]: {\n        paddingBottom: 0,\n      },\n    },\n\n    \"& .MuiTypography-h5\": {\n      width: 200,\n      height: 50,\n      fontSize: 20,\n      [theme.breakpoints.down(\"xs\")]: {\n        width: \"auto\",\n        height: 40,\n        fontSize: 16,\n      },\n    },\n\n    \"& .MuiTypography-h6\": {\n      fontWeight: 400,\n      [theme.breakpoints.down(\"xs\")]: {\n        fontSize: 16,\n      },\n    },\n\n    \"& span.MuiTypography-colorTextSecondary\": {\n      [theme.breakpoints.down(\"xs\")]: {\n        fontSize: 12,\n      },\n    },\n\n    \"& button\": {\n      width: \"100%\",\n    },\n  },\n\n  media: {\n    height: 140,\n    backgroundSize: \"contain\",\n    margin: 16,\n  },\n\n  content_background: {\n    backgroundColor: \"#f5f5f5\",\n  },\n}));\n","import { string, number, func, array } from \"prop-types\";\nimport {\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  Typography,\n  useMediaQuery,\n  Snackbar,\n} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\nimport { rupiahFormat } from \"helpers/formattor.helper\";\n\nimport { useStyles } from \"./style\";\nimport { useState } from \"react\";\n\nconst CardComponent = (props) => {\n  const {\n    image,\n    title,\n    price,\n    currency,\n    category,\n    t,\n    openModal,\n    addCartAction,\n    selectedItems,\n  } = props;\n  const [showAlert, setShowAlert] = useState(false);\n  const classes = useStyles();\n  const isXsDevice = useMediaQuery((theme) => theme.breakpoints.down(\"xs\"));\n  const handleShowAlert = () => setShowAlert(true);\n  return (\n    <Card className={classes.root} key={title}>\n      <CardActionArea\n        className={classes.content_background}\n        onClick={() => {\n          openModal();\n          addCartAction([\n            {\n              qty: 1,\n              price,\n              currency,\n              name: title,\n              image,\n            },\n          ]);\n        }}\n      >\n        <CardMedia className={classes.media} image={image} title={title} />\n      </CardActionArea>\n      <CardContent>\n        <Typography color=\"textSecondary\" variant=\"p\">\n          {category}\n        </Typography>\n        <Typography gutterBottom variant=\"h5\">\n          {title}\n        </Typography>\n        <Typography color=\"textSecondary\" variant=\"h6\">\n          {rupiahFormat(price, currency)}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() =>\n            addCartAction([\n              ...selectedItems,\n              {\n                image,\n                qty: 1,\n                currency,\n                price,\n                name: title,\n              },\n            ])\n          }\n        >\n          {isXsDevice ? (\n            <AddShoppingCartIcon onClick={handleShowAlert} />\n          ) : (\n            <span onClick={handleShowAlert}>\n              {t(\"search_product:addToCart\")}}\n            </span>\n          )}\n        </Button>\n      </CardActions>\n      <Snackbar\n        open={showAlert}\n        autoHideDuration={2000}\n        onClose={() => setShowAlert(false)}\n      >\n        <Alert severity=\"success\" variant=\"filled\">\n          {t(\"search_product:alert.successAddCart\")}\n        </Alert>\n      </Snackbar>\n    </Card>\n  );\n};\n\nCardComponent.propTypes = {\n  t: func.isRequired,\n  image: string.isRequired,\n  title: string.isRequired,\n  price: number.isRequired,\n  currency: string.isRequired,\n  category: string.isRequired,\n  openModal: func.isRequired,\n  addCartAction: func.isRequired,\n  selectedItems: array.isRequired,\n};\n\nexport default CardComponent;\n"],"sourceRoot":""}