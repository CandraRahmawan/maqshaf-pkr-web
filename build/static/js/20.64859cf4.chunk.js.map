{"version":3,"sources":["helpers/fetchApi.helper.js","constants/httpStatus.constant.js","helpers/formattor.helper.js","apps/components/core/SearchProduct/useStyle.js","helpers/messageAlert.helper.js","hooks/Shop/useTransactionDebit.hook.js","hooks/Shop/useGetUserByQrCode.hook.js","apps/components/core/SearchProduct/IdentityDataDialog.component.jsx"],"names":["isMethodGET","method","fetchApiClient","url","data","fetch","format","qs","stringify","bindUrlWithParam","process","headers","api_token","getUser","token","body","undefined","JSON","then","response","json","respData","IS_UNAUTHORIZED","window","location","replace","IS_OK","code","message","error","Error","StatusCodes","OK","UNAUTHORIZED","rupiahFormat","value","currency","reverse","toString","split","join","reverseMatch","match","defaultFormatDate","date","dayjs","useStyle","makeStyles","theme","list_modal_image","marginRight","width","height","list_modal_text","color","black","button_progress","position","top","left","marginTop","marginLeft","input_pin","Default","withReactContent","SweetAlert","messageAlert","success","alert","fire","title","icon","text","href","Promise","resolve","useTransactionDebitHook","history","setShowAlert","t","dispatch","useDispatch","useMutation","dataMutationBuy","errorMutationBuy","isLoadingMutationBuy","isLoading","mutateBuy","mutate","dataMutationDebit","errorMutationDebit","isLoadingMutationDebit","mutateDebit","useEffect","getResult","setTransaction","push","useGetUserByQrCodeHook","useQuery","nis","enabled","user","errorUser","IdentityDataDialogComponent","props","classes","useStyles","handleCloseModal","items","qty","total","useState","resultCode","setResultCode","showAlert","get","DialogContent","delay","onError","onScan","style","label","List","ListItem","ListItemAvatar","Avatar","AccountBox","ListItemText","primary","secondary","fullName","class","AccountBalanceWallet","deposit","saldo","DialogActions","Button","onClick","clearCart","userId","disabled","CircularProgress","size","className","Floating","severity"],"mappings":"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","file":"static/js/20.64859cf4.chunk.js","sourcesContent":["import format from 'string-template';\nimport qs from 'qs';\nimport { IS_OK, IS_UNAUTHORIZED } from 'constants/httpStatus.constant';\nimport { getUser } from 'helpers/auth.helper';\n\nconst API_URL = process.env.NODE_ENV === 'development' ? '' : process.env.REACT_APP_API;\n\nconst isMethodGET = (method) => method === 'GET';\n\nconst bindUrlWithParam = (url, method, data) =>\n  format(url, data) + (isMethodGET(method) ? `?${qs.stringify(data)}` : '');\n\nexport const fetchApiClient = (url, method, data) =>\n  fetch(bindUrlWithParam(API_URL + url, method, data), {\n    method,\n    headers: {\n      api_token: getUser().token,\n      'Content-Type': 'application/json',\n    },\n    body: !isMethodGET(method) ? JSON.stringify(data) : undefined,\n  })\n    .then((response) => response.json())\n    .then((respData) => {\n      if (IS_UNAUTHORIZED(respData)) {\n        window.location.replace('/dashboard/login');\n      }\n\n      if (!IS_OK(respData)) {\n        const { code, message, data } = respData;\n        const error = new Error(message);\n        error.code = code;\n        error.message = message;\n        error.data = data;\n        throw error;\n      }\n      return respData;\n    });\n","import { StatusCodes } from 'http-status-codes';\n\nexport const IS_OK = (response) => response?.code === StatusCodes.OK;\n\nexport const IS_UNAUTHORIZED = (response) => response?.code === StatusCodes.UNAUTHORIZED;\n","import dayjs from 'dayjs';\n\nexport const rupiahFormat = (value, currency = 'Rp') => {\n  const reverse = value.toString().split('').reverse().join('');\n  const reverseMatch = reverse.match(/\\d{1,3}/g);\n  return `${currency}. ${reverseMatch.join('.').split('').reverse().join('')}`;\n};\n\nexport const defaultFormatDate = (date) => {\n  return dayjs(date).format('MM MMM YYYY, HH:mm');\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyle = makeStyles((theme) => ({\n  list_modal_image: {\n    marginRight: 12,\n\n    \"& img\": {\n      width: 50,\n      height: 50,\n    },\n  },\n\n  list_modal_text: {\n    color: theme.color.black,\n  },\n\n  button_progress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n\n  input_pin: {\n    width: \"100%\",\n  },\n}));\n\nexport default useStyle;\n","import SweetAlert from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\n\nconst Default = withReactContent(SweetAlert);\n\nconst messageAlert = {\n  success: (alert) =>\n    Default.fire({\n      title: alert.title,\n      icon: \"success\",\n      text: alert.text,\n    }).then(() => {\n      if (alert.href) {\n        window.location.href = alert.href;\n      }\n      return Promise.resolve();\n    }),\n};\n\nexport default messageAlert;\n","import { useEffect } from 'react';\nimport { useMutation } from 'react-query';\nimport { useDispatch } from 'react-redux';\nimport { fetchApiClient } from 'helpers/fetchApi.helper';\nimport { setTransaction } from 'redux/reducers/transaction.reducer';\nimport messageAlert from 'helpers/messageAlert.helper';\n\nconst useTransactionDebitHook = (history, setShowAlert, t) => {\n  const dispatch = useDispatch();\n  const {\n    data: dataMutationBuy,\n    error: errorMutationBuy,\n    isLoading: isLoadingMutationBuy,\n    mutate: mutateBuy,\n  } = useMutation((data) => fetchApiClient('/transactions/buy/{userId}', 'POST', data));\n\n  const {\n    data: dataMutationDebit,\n    error: errorMutationDebit,\n    isLoading: isLoadingMutationDebit,\n    mutate: mutateDebit,\n  } = useMutation((data) => fetchApiClient('/deposit/debet/{userId}', 'POST', data));\n\n  useEffect(() => {\n    if (dataMutationBuy?.data) {\n      const getResult = dataMutationBuy?.data;\n      dispatch(setTransaction(getResult));\n      history.push('/pin');\n    }\n\n    if (errorMutationBuy) {\n      setShowAlert(true);\n    }\n  }, [dataMutationBuy, errorMutationBuy]);\n\n  useEffect(() => {\n    if (dataMutationDebit) {\n      void messageAlert.success({\n        title: t('search_product:alert.successPay'),\n        text: dataMutationDebit?.message,\n        href: '/',\n      });\n    }\n\n    if (errorMutationDebit) {\n      setShowAlert(true);\n    }\n  }, [dataMutationDebit, errorMutationDebit]);\n\n  return {\n    errorMutationBuy,\n    isLoadingMutationBuy,\n    mutateBuy,\n    mutateDebit,\n    dataMutationDebit,\n    errorMutationDebit,\n    isLoadingMutationDebit,\n  };\n};\n\nexport default useTransactionDebitHook;\n","import { useQuery } from 'react-query';\nimport { fetchApiClient } from 'helpers/fetchApi.helper';\nimport { useEffect } from 'react';\n\nconst useGetUserByQrCodeHook = (code, setShowAlert) => {\n  const {\n    data: user,\n    error: errorUser,\n    isLoading,\n  } = useQuery(['getUserByQrCode', code], () =>\n    fetchApiClient(\n      `/user/saldo`,\n      'GET',\n      {\n        nis: code,\n      },\n      {\n        enabled: !!code,\n      }\n    )\n  );\n\n  useEffect(() => {\n    if (errorUser) {\n      setShowAlert(true);\n    }\n  }, [errorUser]);\n\n  return { user, errorUser, isLoading };\n};\n\nexport default useGetUserByQrCodeHook;\n","import { useState } from 'react';\nimport {\n  Button,\n  DialogContent,\n  DialogActions,\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  CircularProgress,\n} from '@material-ui/core';\nimport { AccountBox, AccountBalanceWallet } from '@material-ui/icons';\nimport get from 'lodash/get';\nimport QrReader from 'react-qr-reader';\nimport { array, func, number, object } from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { clearCart } from 'redux/reducers/cartSelected.reducer';\nimport useGetUserByQrCodeHook from 'hooks/Shop/useGetUserByQrCode.hook';\nimport { Spinner, Alert } from 'apps/components/ui';\nimport { rupiahFormat } from 'helpers/formattor.helper';\nimport useTransactionDebitHook from 'hooks/Shop/useTransactionDebit.hook';\n\nimport useStyles from './useStyle';\n\nconst IdentityDataDialogComponent = (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { t, handleCloseModal, history, items, qty, total } = props;\n  const [resultCode, setResultCode] = useState();\n  const [showAlert, setShowAlert] = useState(false);\n\n  const { user, errorUser, isLoading } = useGetUserByQrCodeHook(resultCode, setShowAlert);\n  const getUser = get(user, 'data', {});\n\n  const { isLoadingMutationBuy, mutateBuy, errorMutationBuy } = useTransactionDebitHook(\n    history,\n    setShowAlert,\n    t\n  );\n\n  const handleScan = (data) => {\n    if (data) {\n      setResultCode(data);\n    }\n  };\n\n  const handleError = () => {\n    setShowAlert(true);\n  };\n\n  return (\n    <>\n      <DialogContent>\n        {!user && (\n          <QrReader\n            delay={300}\n            onError={handleError}\n            onScan={handleScan}\n            style={{ width: '100%' }}\n          />\n        )}\n        {isLoading ? (\n          <Spinner label={t('common:loading')} />\n        ) : (\n          !errorUser && (\n            <List>\n              <ListItem key=\"user\">\n                <ListItemAvatar>\n                  <Avatar>\n                    <AccountBox />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={getUser?.user?.nis}\n                  secondary={`${getUser?.user?.fullName} - ${getUser?.user?.class}`}\n                />\n              </ListItem>\n              <ListItem key=\"saldo\">\n                <ListItemAvatar>\n                  <Avatar>\n                    <AccountBalanceWallet />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={t('common:balance')}\n                  secondary={rupiahFormat(getUser?.deposit?.saldo)}\n                />\n              </ListItem>\n            </List>\n          )\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            dispatch(clearCart());\n            handleCloseModal();\n          }}\n          color=\"primary\"\n        >\n          {t('common:cancel')}\n        </Button>\n        <Button\n          onClick={() => {\n            mutateBuy({\n              userId: getUser?.user?.userId,\n              total,\n              qty,\n              items,\n            });\n          }}\n          color=\"primary\"\n          disabled={isLoadingMutationBuy}\n        >\n          {t('common:pay')}\n          {isLoadingMutationBuy && (\n            <CircularProgress size={18} className={classes.button_progress} />\n          )}\n        </Button>\n      </DialogActions>\n      <Alert.Floating\n        severity=\"error\"\n        showAlert={showAlert}\n        setShowAlert={setShowAlert}\n        text={errorUser?.message || errorMutationBuy?.message || t('glossary:notFoundUser')}\n      />\n    </>\n  );\n};\n\nIdentityDataDialogComponent.propTypes = {\n  t: func.isRequired,\n  handleCloseModal: func.isRequired,\n  history: object.isRequired,\n  items: array.isRequired,\n  qty: number.isRequired,\n  total: number.isRequired,\n};\n\nexport default IdentityDataDialogComponent;\n"],"sourceRoot":""}