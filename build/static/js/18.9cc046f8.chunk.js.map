{"version":3,"sources":["helpers/auth.helper.js","helpers/fetchApi.helper.js","constants/httpStatus.constant.js","apps/components/core/SearchProduct/index.js","apps/components/core/Header/index.js","apps/components/core/index.js","helpers/formattor.helper.js","apps/layouts/Dashboard.layout.jsx","hooks/Dashboard/Administrator/useGetAllAdministrator.hook.js","apps/containers/Dashboard/Administrator/style.jsx","apps/containers/Dashboard/Administrator/AdministratorList.container.jsx","views/dashboard/administrator/AdministratorList.view.jsx"],"names":["setAuth","data","localStorage","setItem","JSON","stringify","getUser","parse","getItem","err","console","error","isMethodGET","method","fetchApiClient","url","fetch","format","qs","bindUrlWithParam","process","headers","api_token","token","body","undefined","then","response","json","respData","IS_UNAUTHORIZED","window","location","replace","IS_OK","code","message","Error","StatusCodes","OK","UNAUTHORIZED","SummaryDialog","lazy","IdentityDataDialog","ConfirmationPinDialog","Dashboard","Login","Footer","SidebarMenuLeft","rupiahFormat","value","currency","reverse","toString","split","join","reverseMatch","match","defaultFormatDate","date","dayjs","useStyles","makeStyles","theme","drawer_header","display","alignItems","padding","spacing","mixins","toolbar","justifyContent","main_wrapper","flexGrow","content","transition","transitions","create","easing","sharp","duration","leavingscreen","content_shift","easeout","enteringscreen","marginLeft","DashboardLayout","children","t","history","classes","useState","open","setOpen","useEffect","handleDrawerOpen","handleDrawerClose","className","clsx","useGetAllAdministratorHook","useQuery","isLoading","styles","name","label","withStyles","map","row","index","TableRow","TableCell","component","scope","administratorId","username","fullName","createdAt","id","withTranslation","props","Helmet"],"mappings":"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","file":"static/js/18.9cc046f8.chunk.js","sourcesContent":["export const setAuth = (data) => {\n  localStorage.setItem('maqshaf-user', JSON.stringify(data?.data));\n};\n\nexport const getUser = () => {\n  try {\n    return JSON.parse(localStorage.getItem('maqshaf-user'));\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n};\n","import format from 'string-template';\nimport qs from 'qs';\nimport { IS_OK, IS_UNAUTHORIZED } from 'constants/httpStatus.constant';\nimport { getUser } from 'helpers/auth.helper';\n\nconst API_URL = process.env.NODE_ENV === 'development' ? '' : process.env.REACT_APP_API;\n\nconst isMethodGET = (method) => method === 'GET';\n\nconst bindUrlWithParam = (url, method, data) =>\n  format(url, data) + (isMethodGET(method) ? `?${qs.stringify(data)}` : '');\n\nexport const fetchApiClient = (url, method, data) =>\n  fetch(bindUrlWithParam(API_URL + url, method, data), {\n    method,\n    headers: {\n      api_token: getUser()?.token,\n      'Content-Type': 'application/json',\n    },\n    body: !isMethodGET(method) ? JSON.stringify(data) : undefined,\n  })\n    .then((response) => response.json())\n    .then((respData) => {\n      if (IS_UNAUTHORIZED(respData)) {\n        window.location.replace('/dashboard/login');\n      }\n\n      if (!IS_OK(respData)) {\n        const { code, message, data } = respData;\n        const error = new Error(message);\n        error.code = code;\n        error.message = message;\n        error.data = data;\n        throw error;\n      }\n      return respData;\n    });\n","import { StatusCodes } from 'http-status-codes';\n\nexport const IS_OK = (response) => response?.code === StatusCodes.OK;\n\nexport const IS_UNAUTHORIZED = (response) => response?.code === StatusCodes.UNAUTHORIZED;\n","import { lazy } from \"react\";\n\nconst SummaryDialog = lazy(() => import(\"./SummaryDialog.component\"));\nconst IdentityDataDialog = lazy(() => import(\"./IdentityDataDialog.component\"));\nconst ConfirmationPinDialog = lazy(() =>\n  import(\"./ConfirmationPinDialog.component\")\n);\n\nexport default { SummaryDialog, IdentityDataDialog, ConfirmationPinDialog };\n","import { lazy } from 'react';\n\nconst Dashboard = lazy(() => import('./Dashboard.component'));\nconst Login = lazy(() => import('./Login.component'));\n\nexport default { Dashboard, Login };\n","import { lazy } from 'react';\nimport SearchProduct from './SearchProduct';\nimport Header from './Header';\n\nconst Footer = lazy(() => import('./Footer/Footer.component'));\nconst SidebarMenuLeft = lazy(() => import('./SidebarLeftMenu/SidebarMenuLeft.component'));\n\nexport { Footer, SearchProduct, Header, SidebarMenuLeft };\n","import dayjs from 'dayjs';\n\nexport const rupiahFormat = (value, currency = 'Rp') => {\n  const reverse = value.toString().split('').reverse().join('');\n  const reverseMatch = reverse.match(/\\d{1,3}/g);\n  return `${currency}. ${reverseMatch.join('.').split('').reverse().join('')}`;\n};\n\nexport const defaultFormatDate = (date) => {\n  return dayjs(date).format('MM MMM YYYY, HH:mm');\n};\n","import { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { element, func, object } from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Footer, Header, SidebarMenuLeft } from 'apps/components/core';\nimport { getUser } from 'helpers/auth.helper';\n\nconst useStyles = makeStyles((theme) => ({\n  drawer_header: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n\n    justifyContent: 'flex-end',\n  },\n\n  main_wrapper: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition:\n      theme.transitions.create(\n        'margin',\n        {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingscreen,\n        }\n      ),\n  },\n\n  content_shift: {\n    transition:\n      theme.transitions.create(\n        'margin',\n        {\n          easing: theme.transitions.easing.easeout,\n          duration: theme.transitions.duration.enteringscreen,\n        }\n      ),\n    marginLeft: 0,\n  },\n}));\n\nconst DashboardLayout = ({ children, t, history }) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const handleDrawerClose = () => setOpen(false);\n  const handleDrawerOpen = () => setOpen(true);\n\n  useEffect(() => {\n    if (!getUser()) {\n      history.replace('/dashboard/login');\n    }\n  }, []);\n\n  return (\n    <>\n      <Header.Dashboard t={t} open={open} handleDrawerOpen={handleDrawerOpen} />\n      <SidebarMenuLeft t={t} open={open} handleDrawerClose={handleDrawerClose} />\n      <main\n        className={clsx(classes.content, {\n          [classes.content_shift]: open,\n        })}\n      >\n        <div className={classes.drawer_header} />\n        {children}\n      </main>\n      <Footer t={t} />\n    </>\n  );\n};\n\nDashboardLayout.propTypes = {\n  history: object.isRequired,\n  children: element.isRequired,\n  t: func.isRequired,\n};\n\nexport default DashboardLayout;\n","import { useQuery } from 'react-query';\nimport { fetchApiClient } from 'helpers/fetchApi.helper';\n\nconst useGetAllAdministratorHook = () => {\n  const { data, isLoading } = useQuery('listAllAdministrator', () =>\n    fetchApiClient(`/administrator/all`, 'GET')\n  );\n  return { data, isLoading };\n};\n\nexport default useGetAllAdministratorHook;\n","const styles = (theme) => ({});\n\nexport default styles;\n","import { TableRow, TableCell } from '@material-ui/core';\nimport { func, object } from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { DataTables } from 'apps/components/ui';\nimport { defaultFormatDate } from 'helpers/formattor.helper';\nimport useGetAllAdministratorHook from 'hooks/Dashboard/Administrator/useGetAllAdministrator.hook';\n\nimport styles from './style';\n\nconst headers = (t) => [\n  {\n    name: 'number',\n    label: t('common:label.no'),\n  },\n  {\n    name: 'id',\n    label: t('dashboard_administrator:table.header.id'),\n  },\n  {\n    name: 'username',\n    label: t('dashboard_administrator:table.header.username'),\n  },\n  {\n    name: 'fullName',\n    label: t('common:label.fullName'),\n  },\n  {\n    name: 'createdAt',\n    label: t('common:label.createdAt'),\n  },\n  {\n    name: 'action',\n    label: t('common:label.action'),\n  },\n];\n\nconst AdministratorListContainer = ({ t }) => {\n  const { data, isLoading } = useGetAllAdministratorHook();\n  return (\n    <DataTables isLoading={isLoading} headers={headers(t)}>\n      {data?.data?.map((row, index) => (\n        <TableRow key={row.id}>\n          <TableCell component=\"th\" scope=\"row\">\n            {index + 1}\n          </TableCell>\n          <TableCell>{row.administratorId}</TableCell>\n          <TableCell>{row.username}</TableCell>\n          <TableCell>{row.fullName}</TableCell>\n          <TableCell>{defaultFormatDate(row.createdAt)}</TableCell>\n          <TableCell>-</TableCell>\n        </TableRow>\n      ))}\n    </DataTables>\n  );\n};\n\nAdministratorListContainer.propTypes = {\n  classes: object.isRequired,\n  t: func.isRequired,\n  history: object.isRequired,\n  location: object.isRequired,\n};\n\nexport default withStyles(styles)(AdministratorListContainer);\n","import { Helmet } from 'react-helmet';\nimport { withTranslation } from 'react-i18next';\nimport { func, object } from 'prop-types';\nimport AdministratorListContainer from 'apps/containers/Dashboard/Administrator/AdministratorList.container';\nimport DashboardLayout from 'apps/layouts/Dashboard.layout';\n\nconst AdministratorListView = (props) => {\n  const { t, history, location } = props;\n  return (\n    <>\n      <Helmet>\n        <title>{t('dashboard_administrator:metaTitle')}</title>\n        <meta name=\"description\" content={t('dashboard_administrator:metaDescription')} />\n      </Helmet>\n      <DashboardLayout t={t} history={history}>\n        <AdministratorListContainer t={t} history={history} location={location} />\n      </DashboardLayout>\n    </>\n  );\n};\n\nAdministratorListView.propTypes = {\n  t: func.isRequired,\n  history: object.isRequired,\n  location: object.isRequired,\n};\n\nexport default withTranslation(['dashboard_administrator', 'glossary'])(AdministratorListView);\n"],"sourceRoot":""}