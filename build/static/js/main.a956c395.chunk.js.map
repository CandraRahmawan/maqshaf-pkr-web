{"version":3,"sources":["providers/Themes.provider.jsx","providers/QueryClient.provider.jsx","constants/common.constant.js","redux/store.js","providers/Redux.provider.jsx","lib/i18n.js","config/routes.js","apps/index.jsx","serviceWorkerRegistration.js","reportWebVitals.js","pwaEventListeners.js","index.jsx","apps/components/ui/Spinner/Spinner.component.jsx","apps/components/ui/Alerts/index.js","apps/components/ui/InputFile/style.jsx","apps/components/ui/InputFile/InputFile.component.jsx","apps/components/ui/Skeleton/index.js","apps/components/ui/index.js","redux/reducers/cartSelected.reducer.js","redux/reducers/transaction.reducer.js"],"names":["theme","createTheme","primaryColor","orangeColor","whiteColor","color","white","black","ThemesProvider","children","ThemeProvider","ReactQueryClientProvider","queryClient","QueryClient","defaultOptions","queries","refetchOnMount","refetchOnWindowFocus","retry","QueryClientProvider","client","initialIsOpen","process","configureStore","reducer","cartSelected","cartSelectedReducer","transaction","transactionReducer","devTools","Boolean","localStorage","getItem","ReduxProvider","store","i18n","use","HttpApi","initReactI18next","init","fallbackLng","lng","interpolation","escapeValue","ns","defaultNS","routes","path","exact","component","lazy","Router","map","route","index","Component","render","props","fallback","label","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","fireTracking","console","log","dayjs","locale","ReactDOM","StrictMode","I18nextProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","isBrowser","addEventListener","fireAddToHomeScreenImpression","event","userChoice","choiceResult","removeEventListener","trackText","standalone","matchMedia","matches","register","err","useStyles","makeStyles","root","textAlign","marginTop","SpinnerComponent","classes","Grid","container","className","item","xs","CircularProgress","Floating","styles","text_error","fontSize","withStyles","onChange","value","useState","selectedImage","setSelectedImage","imageUrl","setImageUrl","useEffect","URL","createObjectURL","accept","type","id","style","display","e","target","files","htmlFor","Button","variant","Box","marginBottom","src","alt","name","height","DataTable","Card","DataTables","Dialog","cartSelectedSlice","createSlice","initialState","total","qty","items","reducers","selectCart","state","action","payload","price","reduce","clearCart","actions","transactionSlice","transactionCode","transactionId","transactionDate","saldo","userId","setTransaction"],"mappings":"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","file":"static/js/main.a956c395.chunk.js","sourcesContent":["import { ThemeProvider } from \"@material-ui/core/styles\";\nimport { createTheme } from \"@material-ui/core/styles\";\n\nconst theme = createTheme({\n  primaryColor: \"#00a8ff\",\n  orangeColor: \"#ff9100\",\n  whiteColor: \"#fff\",\n  color: {\n    white: \"#fff\",\n    black: \"#000\",\n  },\n});\n\nconst ThemesProvider = ({ children }) => (\n  <ThemeProvider theme={theme}>{children}</ThemeProvider>\n);\n\nexport default ThemesProvider;\n","import { QueryClientProvider, QueryClient } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { element } from \"prop-types\";\nimport { isDevelopment } from \"constants/common.constant\";\n\nexport default function ReactQueryClientProvider({ children }) {\n  const queryClient = new QueryClient({\n    defaultOptions: {\n      queries: {\n        refetchOnMount: false,\n        refetchOnWindowFocus: false,\n        retry: false,\n      },\n    },\n  });\n  return (\n    <QueryClientProvider client={queryClient}>\n      {children}\n      <ReactQueryDevtools initialIsOpen={isDevelopment} />\n    </QueryClientProvider>\n  );\n}\n\nReactQueryClientProvider.propTypes = {\n  children: element.isRequired,\n};\n","export const isDevelopment = process.env.NODE_ENV === \"development\";","import { configureStore } from \"@reduxjs/toolkit\";\nimport { isDevelopment } from \"constants/common.constant\";\nimport cartSelectedReducer from \"./reducers/cartSelected.reducer\";\nimport transactionReducer from \"./reducers/transaction.reducer\";\n\nexport default configureStore({\n  reducer: {\n    cartSelected: cartSelectedReducer,\n    transaction: transactionReducer,\n  },\n  devTools: isDevelopment || Boolean(localStorage.getItem(\"redux-debug\")),\n});\n","import { Provider } from \"react-redux\";\nimport store from \"redux/store\";\nimport { element } from \"prop-types\";\n\nexport default function ReduxProvider({ children }) {\n  return <Provider store={store}>{children}</Provider>;\n}\n\nReduxProvider.propTypes = {\n  children: element.isRequired,\n};\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport HttpApi from \"i18next-http-backend\";\n\ni18n\n  .use(HttpApi)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: \"id\",\n    lng: \"id\",\n    interpolation: {\n      escapeValue: false,\n    },\n    ns: [\"common\"],\n    defaultNS: \"common\",\n  });\n\nexport default i18n;\n","import { lazy } from 'react';\n\nconst routes = [\n  {\n    path: '/:action(identitas|pin)?',\n    exact: true,\n    component: lazy(() => import('views/shop/SearchProduct.view')),\n  },\n  {\n    path: '/dashboard',\n    exact: true,\n    component: lazy(() => import('views/dashboard/Dashboard.view')),\n  },\n  {\n    path: '/dashboard/login',\n    exact: true,\n    component: lazy(() => import('views/dashboard/Login.view')),\n  },\n  {\n    path: '/dashboard/produk',\n    exact: true,\n    component: lazy(() => import('views/dashboard/products/ProductList.view')),\n  },\n  {\n    path: '/dashboard/produk/:id',\n    exact: true,\n    component: lazy(() => import('views/dashboard/products/ProductDetail.view')),\n  },\n  {\n    path: '/dashboard/santri',\n    exact: true,\n    component: lazy(() => import('views/dashboard/users/UserList.view')),\n  },\n  {\n    path: '/dashboard/santri/:id',\n    exact: true,\n    component: lazy(() => import('views/dashboard/users/UserDetail.view')),\n  },\n  {\n    path: '/dashboard/administrator',\n    exact: true,\n    component: lazy(() => import('views/dashboard/administrator/AdministratorList.view')),\n  },\n  {\n    path: '/dashboard/administrator/:id',\n    exact: true,\n    component: lazy(() => import('views/dashboard/administrator/AdministratorDetail.view')),\n  },\n  {\n    path: '/dashboard/transaksi/masuk',\n    exact: true,\n    component: lazy(() => import('views/dashboard/transaction/TransactionCreditList.view')),\n  },\n  {\n    path: '/dashboard/transaksi/keluar',\n    exact: true,\n    component: lazy(() => import('views/dashboard/transaction/TransactionDebetList.view')),\n  },\n  {\n    path: '/dashboard/cek-saldo',\n    exact: true,\n    component: lazy(() => import('views/dashboard/CheckBalanced.view')),\n  },\n  {\n    path: \"*\",\n    component: lazy(() => import(\"views/error-page/notFound.view\")),\n  },\n];\n\nexport default routes;\n","import React, { Suspense } from \"react\";\nimport { Spinner } from \"apps/components/ui\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport routes from \"config/routes\";\n\nexport default function Router() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        {routes.map((route, index) => {\n          const { path, exact, component: Component } = route;\n          return (\n            <Route\n              key={index}\n              path={path}\n              exact={exact}\n              render={(props) => (\n                <Suspense fallback={<Spinner label=\"Sedang memuat data...\" />}>\n                  <Component {...props} />\n                </Suspense>\n              )}\n            />\n          );\n        })}\n      </Switch>\n    </BrowserRouter>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const fireTracking = (label) => {\n  //Fire tracking here\n  console.log(label);\n};\n\nexport const pwaTrackingListeners = () => {\n  const fireAddToHomeScreenImpression = (event) => {\n    fireTracking(\"Add to homescreen shown\");\n    //will not work for chrome, untill fixed\n    event.userChoice.then((choiceResult) => {\n      fireTracking(`User clicked ${choiceResult}`);\n    });\n    //This is to prevent `beforeinstallprompt` event that triggers again on `Add` or `Cancel` click\n    window.removeEventListener(\n      \"beforeinstallprompt\",\n      fireAddToHomeScreenImpression\n    );\n  };\n  window.addEventListener(\"beforeinstallprompt\", fireAddToHomeScreenImpression);\n\n  //Track web app install by user\n  window.addEventListener(\"appinstalled\", (event) => {\n    fireTracking(\"PWA app installed by user!!! Hurray\");\n  });\n\n  //Track from where your web app has been opened/browsed\n  window.addEventListener(\"load\", () => {\n    let trackText;\n    if (navigator && navigator.standalone) {\n      trackText = \"Launched: Installed (iOS)\";\n    } else if (matchMedia(\"(display-mode: standalone)\").matches) {\n      trackText = \"Launched: Installed\";\n    } else {\n      trackText = \"Launched: Browser Tab\";\n    }\n    fireTracking(trackText);\n  });\n};","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport { I18nextProvider } from 'react-i18next';\nimport dayjs from 'dayjs';\nimport ThemeProvider from 'providers/Themes.provider';\nimport QueryClientProvider from 'providers/QueryClient.provider';\nimport ReduxProvider from 'providers/Redux.provider';\nimport { Spinner } from 'apps/components/ui';\nimport i18n from 'lib/i18n';\nimport App from './apps';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nimport { pwaTrackingListeners } from './pwaEventListeners';\n\nimport 'dayjs/locale/id';\n\nimport 'styles/styles.scss';\nimport 'sweetalert2/src/sweetalert2.scss';\n\ndayjs.locale('id');\n\nReactDOM.render(\n  <React.StrictMode>\n    <Suspense fallback={<Spinner label=\"Sedang memnuat halaman...\" />}>\n      <ReduxProvider>\n        <QueryClientProvider>\n          <I18nextProvider i18n={i18n}>\n            <ThemeProvider>\n              <App />\n            </ThemeProvider>\n          </I18nextProvider>\n        </QueryClientProvider>\n      </ReduxProvider>\n    </Suspense>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.unregister();\n\nreportWebVitals();\n\nconst isBrowser = typeof window !== 'undefined';\n\nif (isBrowser) {\n  pwaTrackingListeners();\n}\n\nif (isBrowser && 'serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker\n      .register('/service-worker.js')\n      .then(() => {\n        console.log('Service worker registered');\n      })\n      .catch((err) => {\n        console.log('Service worker registration failed', err);\n      });\n  });\n}\n","import { CircularProgress, Grid } from '@material-ui/core';\nimport { string } from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    textAlign: 'center',\n    marginTop: '30%',\n\n    '& p': {\n      color: '#000',\n    },\n  },\n});\n\nconst SpinnerComponent = ({ label }) => {\n  const classes = useStyles();\n  return (\n    <Grid container>\n      <Grid className={classes.root} item xs={12}>\n        <CircularProgress />\n        <p>{label}</p>\n      </Grid>\n    </Grid>\n  );\n};\n\nSpinnerComponent.propTypes = {\n  label: string,\n};\n\nexport default SpinnerComponent;\n","import { lazy } from \"react\";\n\nconst Floating = lazy(() => import(\"./Floating.component\"));\n\nexport default { Floating };\n","const styles = (theme) => ({\n  text_error: {\n    color: '#f44336',\n    fontSize: 12,\n    marginTop: 10\n  }\n});\n\nexport default styles;\n","import { Box, Button } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './style';\n\nconst InputFile = ({ classes, onChange, value, error }) => {\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [imageUrl, setImageUrl] = useState();\n\n  useEffect(() => {\n    if (selectedImage) {\n      setImageUrl(URL.createObjectURL(selectedImage));\n    }\n  }, [selectedImage]);\n\n  return (\n    <>\n      <input\n        accept=\"image/*\"\n        type=\"file\"\n        id=\"select-image\"\n        style={{ display: 'none' }}\n        onChange={e => {\n          onChange(e)\n          setSelectedImage(e.target.files[0])\n        }}\n      />\n      <label htmlFor=\"select-image\">\n        <Button variant=\"outlined\" color=\"primary\" component=\"span\">\n          {/* Upload Image */}\n          {imageUrl && selectedImage || value ? (\n            <Box marginBottom={2} display=\"flex\" textAlign=\"center\">\n              <img src={imageUrl || value} alt={selectedImage?.name} height=\"100px\" />\n            </Box>\n          ) : <div>Upload Gambar</div>}\n        </Button>\n      </label>\n      <div className={classes.text_error}>\n        {error}\n      </div>\n    </>\n  );\n};\n\nexport default withStyles(styles)(InputFile);\n","import { lazy } from 'react';\n\nconst DataTable = lazy(() => import('./DataTable.component'));\n\nexport default { DataTable };\n","import { lazy } from 'react';\nimport Spinner from './Spinner/Spinner.component';\nimport Alert from './Alerts';\nimport InputFile from './InputFile/InputFile.component'\nimport Skeleton from './Skeleton';\n\nconst Card = lazy(() => import('./Cards/Card.component'));\nconst DataTables = lazy(() => import('./DataTables/DataTable.component'));\nconst Button = lazy(() => import('./Button/Button.component'));\nconst Dialog = lazy(() => import('./Dialog/Dialog.component'));\n\nexport { Card, Spinner, Alert, Skeleton, DataTables, Button, Dialog, InputFile };\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const cartSelectedSlice = createSlice({\n  name: \"cartSelected\",\n  initialState: {\n    total: 0,\n    qty: 0,\n    items: [],\n  },\n  reducers: {\n    selectCart: (state, action) => {\n      const { items } = action.payload;\n      state.total = items\n        .map((item) => item.price * item.qty)\n        .reduce((total, value) => total + value);\n      state.qty = items\n        .map((item) => item.qty)\n        .reduce((total, value) => total + value);\n      state.items = items;\n    },\n    clearCart: (state) => {\n      state.total = 0;\n      state.qty = 0;\n      state.items = [];\n    },\n  },\n});\n\nexport const { selectCart, clearCart } = cartSelectedSlice.actions;\n\nexport default cartSelectedSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const transactionSlice = createSlice({\n  name: \"setTransaction\",\n  initialState: {\n    transactionCode: 0,\n    transactionId: 0,\n    transactionDate: \"\",\n    qty: 0,\n    saldo: 0,\n    total: 0,\n    userId: 0,\n    items: [],\n  },\n  reducers: {\n    setTransaction: (state, action) => {\n      const {\n        items,\n        qty,\n        saldo,\n        transactionCode,\n        transactionId,\n        transactionDate,\n        total,\n        userId,\n      } = action.payload;\n      state.transactionCode = transactionCode;\n      state.transactionId = transactionId;\n      state.transactionDate = transactionDate;\n      state.qty = qty;\n      state.saldo = saldo;\n      state.total = total;\n      state.userId = userId;\n      state.items = items;\n    },\n  },\n});\n\nexport const { setTransaction } = transactionSlice.actions;\n\nexport default transactionSlice.reducer;\n"],"sourceRoot":""}