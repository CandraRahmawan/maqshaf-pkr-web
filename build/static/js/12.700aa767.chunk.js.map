{"version":3,"sources":["helpers/formattor.helper.js","apps/components/core/SearchProduct/useStyle.js","helpers/messageAlert.helper.js","hooks/useTransactionDebit.hook.js","hooks/useGetUserByQrCode.hook.js","apps/components/core/SearchProduct/IdentityDataDialog.component.js"],"names":["rupiahFormat","value","currency","reverse","toString","split","join","reverseMatch","match","useStyle","makeStyles","theme","list_modal_image","marginRight","width","height","list_modal_text","color","black","button_progress","position","top","left","marginTop","marginLeft","input_pin","Default","withReactContent","SweetAlert","messageAlert","success","alert","fire","title","icon","text","then","href","window","location","Promise","resolve","useTransactionDebitHook","history","setShowAlert","t","dispatch","useDispatch","useMutation","data","fetchApiClient","dataMutationBuy","errorMutationBuy","error","isLoadingMutationBuy","isLoading","mutateBuy","mutate","dataMutationDebit","errorMutationDebit","isLoadingMutationDebit","mutateDebit","useEffect","getResult","setTransaction","push","message","useGetUserByQrCodeHook","code","useQuery","nis","enabled","user","errorUser","IdentityDataDialogComponent","props","classes","useStyles","handleCloseModal","items","qty","total","useState","resultCode","setResultCode","showAlert","getUser","get","DialogContent","delay","onError","onScan","style","label","List","ListItem","ListItemAvatar","Avatar","AccountBox","ListItemText","primary","secondary","fullName","class","AccountBalanceWallet","deposit","saldo","DialogActions","Button","onClick","clearCart","userId","disabled","CircularProgress","size","className","Floating","severity"],"mappings":"2HAAA,kCAAO,IAAMA,EAAe,SAACC,GAA4B,IAArBC,EAAoB,uDAAT,KACvCC,EAAUF,EAAMG,WAAWC,MAAM,IAAIF,UAAUG,KAAK,IACpDC,EAAeJ,EAAQK,MAAM,YACnC,MAAM,GAAN,OAAUN,EAAV,aAAuBK,EAAaD,KAAK,KAAKD,MAAM,IAAIF,UAAUG,KAAK,O,iCCHzE,aAEMG,EAAWC,aAAW,SAACC,GAAD,MAAY,CACtCC,iBAAkB,CAChBC,YAAa,GAEb,QAAS,CACPC,MAAO,GACPC,OAAQ,KAIZC,gBAAiB,CACfC,MAAON,EAAMM,MAAMC,OAGrBC,gBAAiB,CACfC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,WAAY,GACZC,YAAa,IAGfC,UAAW,CACTX,MAAO,YAIIL,O,yGC1BTiB,E,MAAUC,GAAiBC,KAgBlBC,EAdM,CACnBC,QAAS,SAACC,GAAD,OACPL,EAAQM,KAAK,CACXC,MAAOF,EAAME,MACbC,KAAM,UACNC,KAAMJ,EAAMI,OACXC,MAAK,WAIN,OAHIL,EAAMM,OACRC,OAAOC,SAASF,KAAON,EAAMM,MAExBG,QAAQC,eCiDNC,IAzDiB,SAACC,EAASC,EAAcC,GACtD,IAAMC,EAAWC,cAD2C,EAOxDC,aAAY,SAACC,GAAD,OACdC,YAAe,6BAA8B,OAAQD,MAL/CE,EAHoD,EAG1DF,KACOG,EAJmD,EAI1DC,MACWC,EAL+C,EAK1DC,UACQC,EANkD,EAM1DC,OAN0D,EAgBxDT,aAAY,SAACC,GAAD,OACdC,YAAe,0BAA2B,OAAQD,MAL5CS,EAZoD,EAY1DT,KACOU,EAbmD,EAa1DN,MACWO,EAd+C,EAc1DL,UACQM,EAfkD,EAe1DJ,OA+BF,OA1BAK,qBAAU,WACR,UAAIX,QAAJ,IAAIA,OAAJ,EAAIA,EAAiBF,KAAM,CACzB,IAAMc,EAAS,OAAGZ,QAAH,IAAGA,OAAH,EAAGA,EAAiBF,KAAK,GACxCH,EAASkB,YAAeD,IACxBpB,EAAQsB,KAAK,QAGXb,GACFR,GAAa,KAEd,CAACO,EAAiBC,IAErBU,qBAAU,WACJJ,GACG7B,EAAaC,QAAQ,CACxBG,MAAOY,EAAE,mCACTV,KAAI,OAAEuB,QAAF,IAAEA,OAAF,EAAEA,EAAmBQ,QACzB7B,KAAM,MAINsB,GACFf,GAAa,KAEd,CAACc,EAAmBC,IAEhB,CACLP,mBACAE,uBACAE,YACAK,cACAH,oBACAC,qBACAC,4B,qOC7BWO,EA3BgB,SAACC,EAAMxB,GAAkB,IAAD,EAKjDyB,YAAS,CAAC,kBAAmBD,IAAO,kBACtClB,YAAe,cAEb,MACA,CACEoB,IAAKF,GAEP,CACEG,UAAWH,OAXTI,EAF6C,EAEnDvB,KACOwB,EAH4C,EAGnDpB,MACAE,EAJmD,EAInDA,UAoBF,OANAO,qBAAU,WACJW,GACF7B,GAAa,KAEd,CAAC6B,IAEG,CAAED,OAAMC,YAAWlB,c,0CCoHbmB,UAvHqB,SAACC,GAAW,IAAD,QACvCC,EAAUC,cACV/B,EAAWC,cACTF,EAAoD8B,EAApD9B,EAAGiC,EAAiDH,EAAjDG,iBAAkBnC,EAA+BgC,EAA/BhC,QAASoC,EAAsBJ,EAAtBI,MAAOC,EAAeL,EAAfK,IAAKC,EAAUN,EAAVM,MAHL,EAITC,qBAJS,mBAItCC,EAJsC,KAI1BC,EAJ0B,OAKXF,oBAAS,GALE,mBAKtCG,EALsC,KAK3BzC,EAL2B,OAONuB,EACrCgB,EACAvC,GAFM4B,EAPqC,EAOrCA,KAAMC,EAP+B,EAO/BA,UAAWlB,EAPoB,EAOpBA,UAInB+B,EAAUC,IAAIf,EAAM,OAAQ,IAXW,EAc3C9B,YAAwBC,EAASC,EAAcC,GADzCS,EAbqC,EAarCA,qBAAsBE,EAbe,EAafA,UAAWJ,EAbI,EAaJA,iBAazC,OACE,qCACE,eAACoC,EAAA,EAAD,YACIhB,GACA,cAAC,IAAD,CACEiB,MAAO,IACPC,QAVU,WAClB9C,GAAa,IAUL+C,OAjBS,SAAC1C,GACdA,GACFmC,EAAcnC,IAgBR2C,MAAO,CAAE9E,MAAO,UAGnByC,EACC,cAAC,IAAD,CAASsC,MAAOhD,EAAE,qBAEjB4B,GACC,eAACqB,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,QAGJ,cAACC,EAAA,EAAD,CACEC,QAAO,OAAEd,QAAF,IAAEA,GAAF,UAAEA,EAASd,YAAX,aAAE,EAAeF,IACxB+B,UAAS,iBAAKf,QAAL,IAAKA,GAAL,UAAKA,EAASd,YAAd,aAAK,EAAe8B,SAApB,qBAAkChB,QAAlC,IAAkCA,GAAlC,UAAkCA,EAASd,YAA3C,aAAkC,EAAe+B,WARhD,QAWd,eAACR,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACO,EAAA,EAAD,QAGJ,cAACL,EAAA,EAAD,CACEC,QAASvD,EAAE,kBACXwD,UAAWrG,YAAY,OAACsF,QAAD,IAACA,GAAD,UAACA,EAASmB,eAAV,aAAC,EAAkBC,WARhC,eAetB,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,QAAS,WACP/D,EAASgE,eACThC,KAEF7D,MAAM,UALR,SAOG4B,EAAE,mBAEL,eAAC+D,EAAA,EAAD,CACEC,QAAS,WAAO,IAAD,EACbrD,EAAU,CACRuD,OAAM,OAAEzB,QAAF,IAAEA,GAAF,UAAEA,EAASd,YAAX,aAAE,EAAeuC,OACvB9B,QACAD,MACAD,WAGJ9D,MAAM,UACN+F,SAAU1D,EAVZ,UAYGT,EAAE,cACFS,GACC,cAAC2D,EAAA,EAAD,CAAkBC,KAAM,GAAIC,UAAWvC,EAAQzD,wBAIrD,cAAC,IAAMiG,SAAP,CACEC,SAAS,QACThC,UAAWA,EACXzC,aAAcA,EACdT,MACW,OAATsC,QAAS,IAATA,OAAA,EAAAA,EAAWP,WAAX,OACAd,QADA,IACAA,OADA,EACAA,EAAkBc,UAClBrB,EAAE","file":"static/js/12.700aa767.chunk.js","sourcesContent":["export const rupiahFormat = (value, currency = \"Rp\") => {\n  const reverse = value.toString().split(\"\").reverse().join(\"\");\n  const reverseMatch = reverse.match(/\\d{1,3}/g);\n  return `${currency}. ${reverseMatch.join(\".\").split(\"\").reverse().join(\"\")}`;\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyle = makeStyles((theme) => ({\n  list_modal_image: {\n    marginRight: 12,\n\n    \"& img\": {\n      width: 50,\n      height: 50,\n    },\n  },\n\n  list_modal_text: {\n    color: theme.color.black,\n  },\n\n  button_progress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n\n  input_pin: {\n    width: \"100%\",\n  },\n}));\n\nexport default useStyle;\n","import SweetAlert from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\n\nconst Default = withReactContent(SweetAlert);\n\nconst messageAlert = {\n  success: (alert) =>\n    Default.fire({\n      title: alert.title,\n      icon: \"success\",\n      text: alert.text,\n    }).then(() => {\n      if (alert.href) {\n        window.location.href = alert.href;\n      }\n      return Promise.resolve();\n    }),\n};\n\nexport default messageAlert;\n","import { useEffect } from \"react\";\nimport { useMutation } from \"react-query\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchApiClient } from \"helpers/fetchApi.helper\";\nimport { setTransaction } from \"redux/reducers/transaction.reducer\";\nimport messageAlert from \"helpers/messageAlert.helper\";\n\nconst useTransactionDebitHook = (history, setShowAlert, t) => {\n  const dispatch = useDispatch();\n  const {\n    data: dataMutationBuy,\n    error: errorMutationBuy,\n    isLoading: isLoadingMutationBuy,\n    mutate: mutateBuy,\n  } = useMutation((data) =>\n    fetchApiClient(\"/transactions/buy/{userId}\", \"POST\", data)\n  );\n\n  const {\n    data: dataMutationDebit,\n    error: errorMutationDebit,\n    isLoading: isLoadingMutationDebit,\n    mutate: mutateDebit,\n  } = useMutation((data) =>\n    fetchApiClient(\"/deposit/debet/{userId}\", \"POST\", data)\n  );\n\n  useEffect(() => {\n    if (dataMutationBuy?.data) {\n      const getResult = dataMutationBuy?.data[0];\n      dispatch(setTransaction(getResult));\n      history.push(\"/pin\");\n    }\n\n    if (errorMutationBuy) {\n      setShowAlert(true);\n    }\n  }, [dataMutationBuy, errorMutationBuy]);\n\n  useEffect(() => {\n    if (dataMutationDebit) {\n      void messageAlert.success({\n        title: t(\"search_product:alert.successPay\"),\n        text: dataMutationDebit?.message,\n        href: \"/\",\n      });\n    }\n\n    if (errorMutationDebit) {\n      setShowAlert(true);\n    }\n  }, [dataMutationDebit, errorMutationDebit]);\n\n  return {\n    errorMutationBuy,\n    isLoadingMutationBuy,\n    mutateBuy,\n    mutateDebit,\n    dataMutationDebit,\n    errorMutationDebit,\n    isLoadingMutationDebit,\n  };\n};\n\nexport default useTransactionDebitHook;\n","import { useQuery } from \"react-query\";\nimport { fetchApiClient } from \"helpers/fetchApi.helper\";\nimport { useEffect } from \"react\";\n\nconst useGetUserByQrCodeHook = (code, setShowAlert) => {\n  const {\n    data: user,\n    error: errorUser,\n    isLoading,\n  } = useQuery([\"getUserByQrCode\", code], () =>\n    fetchApiClient(\n      `/user/saldo`,\n      \"GET\",\n      {\n        nis: code,\n      },\n      {\n        enabled: !!code,\n      }\n    )\n  );\n\n  useEffect(() => {\n    if (errorUser) {\n      setShowAlert(true);\n    }\n  }, [errorUser]);\n\n  return { user, errorUser, isLoading };\n};\n\nexport default useGetUserByQrCodeHook;\n","import { useState } from \"react\";\nimport {\n  Button,\n  DialogContent,\n  DialogActions,\n  List,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { AccountBox, AccountBalanceWallet } from \"@material-ui/icons\";\nimport get from \"lodash/get\";\nimport QrReader from \"react-qr-reader\";\nimport { array, func, number, object } from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { clearCart } from \"redux/reducers/cartSelected.reducer\";\nimport useGetUserByQrCodeHook from \"hooks/useGetUserByQrCode.hook\";\nimport { Spinner, Alert } from \"apps/components/ui\";\nimport { rupiahFormat } from \"helpers/formattor.helper\";\nimport useTransactionDebitHook from \"hooks/useTransactionDebit.hook\";\n\nimport useStyles from \"./useStyle\";\n\nconst IdentityDataDialogComponent = (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { t, handleCloseModal, history, items, qty, total } = props;\n  const [resultCode, setResultCode] = useState();\n  const [showAlert, setShowAlert] = useState(false);\n\n  const { user, errorUser, isLoading } = useGetUserByQrCodeHook(\n    resultCode,\n    setShowAlert\n  );\n  const getUser = get(user, \"data\", {});\n\n  const { isLoadingMutationBuy, mutateBuy, errorMutationBuy } =\n    useTransactionDebitHook(history, setShowAlert, t);\n\n  const handleScan = (data) => {\n    if (data) {\n      setResultCode(data);\n    }\n  };\n\n  const handleError = () => {\n    setShowAlert(true);\n  };\n\n  return (\n    <>\n      <DialogContent>\n        {!user && (\n          <QrReader\n            delay={300}\n            onError={handleError}\n            onScan={handleScan}\n            style={{ width: \"100%\" }}\n          />\n        )}\n        {isLoading ? (\n          <Spinner label={t(\"common:loading\")} />\n        ) : (\n          !errorUser && (\n            <List>\n              <ListItem key=\"user\">\n                <ListItemAvatar>\n                  <Avatar>\n                    <AccountBox />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={getUser?.user?.nis}\n                  secondary={`${getUser?.user?.fullName} - ${getUser?.user?.class}`}\n                />\n              </ListItem>\n              <ListItem key=\"saldo\">\n                <ListItemAvatar>\n                  <Avatar>\n                    <AccountBalanceWallet />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary={t(\"common:balance\")}\n                  secondary={rupiahFormat(getUser?.deposit?.saldo)}\n                />\n              </ListItem>\n            </List>\n          )\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            dispatch(clearCart());\n            handleCloseModal();\n          }}\n          color=\"primary\"\n        >\n          {t(\"common:cancel\")}\n        </Button>\n        <Button\n          onClick={() => {\n            mutateBuy({\n              userId: getUser?.user?.userId,\n              total,\n              qty,\n              items,\n            });\n          }}\n          color=\"primary\"\n          disabled={isLoadingMutationBuy}\n        >\n          {t(\"common:pay\")}\n          {isLoadingMutationBuy && (\n            <CircularProgress size={18} className={classes.button_progress} />\n          )}\n        </Button>\n      </DialogActions>\n      <Alert.Floating\n        severity=\"error\"\n        showAlert={showAlert}\n        setShowAlert={setShowAlert}\n        text={\n          errorUser?.message ||\n          errorMutationBuy?.message ||\n          t(\"glossary:notFoundUser\")\n        }\n      />\n    </>\n  );\n};\n\nIdentityDataDialogComponent.propTypes = {\n  t: func.isRequired,\n  handleCloseModal: func.isRequired,\n  history: object.isRequired,\n  items: array.isRequired,\n  qty: number.isRequired,\n  total: number.isRequired,\n};\n\nexport default IdentityDataDialogComponent;\n"],"sourceRoot":""}