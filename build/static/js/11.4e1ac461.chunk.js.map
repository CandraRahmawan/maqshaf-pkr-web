{"version":3,"sources":["apps/components/core/SearchProduct/useStyle.js","hooks/useGetUserByQrCode.hook.js","apps/components/core/SearchProduct/IdentityDataDialog.component.js"],"names":["useStyle","makeStyles","theme","listmodalimage","marginRight","width","height","listmodaltext","color","blackcolor","useGetUserByQrCodeHook","code","useQuery","fetchApiClient","nis","enabled","user","data","isLoading","IdentityDataDialogComponent","props","useStyles","dispatch","useDispatch","t","handleCloseModal","history","useState","resultCode","setResultCode","DialogContent","delay","onError","err","console","error","onScan","style","JSON","stringify","DialogActions","Button","onClick","clearCart","push"],"mappings":"2HAAA,aAEMA,EAAWC,aAAW,SAACC,GAAD,MAAY,CACtCC,eAAgB,CACdC,YAAa,GAEb,QAAS,CACPC,MAAO,GACPC,OAAQ,KAIZC,cAAe,CACbC,MAAON,EAAMO,gBAIFT,O,2ICEAU,EAhBgB,SAACC,GAAU,IAAD,EACLC,YAAS,CAAC,kBAAmBD,IAAO,kBACpEE,YAAe,cAEb,MACA,CACEC,IAAKH,GAEP,CACEI,UAAWJ,OAIjB,MAAO,CAAEK,KAb8B,EAC/BC,KAYOC,UAbwB,EACnBA,Y,gBC4DPC,UAtDqB,SAACC,GACnBC,cAAhB,IACMC,EAAWC,cACTC,EAAiCJ,EAAjCI,EAAGC,EAA8BL,EAA9BK,iBAAkBC,EAAYN,EAAZM,QAHgB,EAITC,qBAJS,mBAItCC,EAJsC,KAI1BC,EAJ0B,OAMjBnB,EAAuBkB,GAA3CZ,EANqC,EAMrCA,KAAME,EAN+B,EAM/BA,UAYd,OACE,qCACE,eAACY,EAAA,EAAD,WACE,cAAC,IAAD,CACEC,MAAO,IACPC,QATY,SAACC,GACnBC,QAAQC,MAAMF,IASRG,OAhBW,SAACnB,GACdA,GACFY,EAAcZ,IAeVoB,MAAO,CAAEhC,MAAO,UAElB,4CAAauB,GAAc,MAC3B,4BAAIV,EAAY,eAAiBoB,KAAKC,UAAUvB,GAAQ,SAE1D,eAACwB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,QAAS,WACPpB,EAASqB,eACTlB,KAEFjB,MAAM,UALR,SAOGgB,EAAE,mBAEL,cAACiB,EAAA,EAAD,CAAQC,QAAS,kBAAMhB,EAAQkB,KAAK,eAAepC,MAAM,UAAzD,SACGgB,EAAE","file":"static/js/11.4e1ac461.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyle = makeStyles((theme) => ({\n  listmodalimage: {\n    marginRight: 12,\n\n    \"& img\": {\n      width: 50,\n      height: 50,\n    },\n  },\n\n  listmodaltext: {\n    color: theme.blackcolor,\n  },\n}));\n\nexport default useStyle;\n","import { useQuery } from \"react-query\";\nimport { fetchApiClient } from \"helpers/fetchApi.helper\";\n\nconst useGetUserByQrCodeHook = (code) => {\n  const { data: user, isLoading } = useQuery([\"getUserByQrCode\", code], () =>\n    fetchApiClient(\n      `/user/saldo`,\n      \"GET\",\n      {\n        nis: code,\n      },\n      {\n        enabled: !!code,\n      }\n    )\n  );\n  return { user, isLoading };\n};\n\nexport default useGetUserByQrCodeHook;\n","import { useState } from \"react\";\nimport { Button, DialogContent, DialogActions } from \"@material-ui/core\";\nimport QrReader from \"react-qr-reader\";\nimport { func, object } from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { clearCart } from \"redux/reducers/cartSelected.reducer\";\nimport useGetUserByQrCodeHook from \"hooks/useGetUserByQrCode.hook\";\n\nimport useStyles from \"./useStyle\";\n\nconst IdentityDataDialogComponent = (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { t, handleCloseModal, history } = props;\n  const [resultCode, setResultCode] = useState();\n\n  const { user, isLoading } = useGetUserByQrCodeHook(resultCode);\n\n  const handleScan = (data) => {\n    if (data) {\n      setResultCode(data);\n    }\n  };\n\n  const handleError = (err) => {\n    console.error(err);\n  };\n\n  return (\n    <>\n      <DialogContent>\n        <QrReader\n          delay={300}\n          onError={handleError}\n          onScan={handleScan}\n          style={{ width: \"100%\" }}\n        />\n        <p>{`code: ${resultCode || \"\"}`}</p>\n        <p>{isLoading ? \"loading data\" : JSON.stringify(user || {})}</p>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            dispatch(clearCart());\n            handleCloseModal();\n          }}\n          color=\"primary\"\n        >\n          {t(\"common:cancel\")}\n        </Button>\n        <Button onClick={() => history.push(\"/identitas\")} color=\"primary\">\n          {t(\"common:pay\")}\n        </Button>\n      </DialogActions>\n    </>\n  );\n};\n\nIdentityDataDialogComponent.propTypes = {\n  t: func.isRequired,\n  handleCloseModal: func.isRequired,\n  history: object.isRequired,\n};\n\nexport default IdentityDataDialogComponent;\n"],"sourceRoot":""}